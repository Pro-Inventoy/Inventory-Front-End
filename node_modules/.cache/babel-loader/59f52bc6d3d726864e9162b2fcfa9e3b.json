{"ast":null,"code":"'use strict';\n\nvar interlaceUtils = require('./interlace');\n\nvar pixelBppMapper = [// 0 - dummy entry\nfunction () {}, // 1 - L\n// 0: 0, 1: 0, 2: 0, 3: 0xff\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos === data.length) {\n    throw new Error('Ran out of data');\n  }\n\n  var pixel = data[rawPos];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = 0xff;\n}, // 2 - LA\n// 0: 0, 1: 0, 2: 0, 3: 1\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos + 1 >= data.length) {\n    throw new Error('Ran out of data');\n  }\n\n  var pixel = data[rawPos];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = data[rawPos + 1];\n}, // 3 - RGB\n// 0: 0, 1: 1, 2: 2, 3: 0xff\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos + 2 >= data.length) {\n    throw new Error('Ran out of data');\n  }\n\n  pxData[pxPos] = data[rawPos];\n  pxData[pxPos + 1] = data[rawPos + 1];\n  pxData[pxPos + 2] = data[rawPos + 2];\n  pxData[pxPos + 3] = 0xff;\n}, // 4 - RGBA\n// 0: 0, 1: 1, 2: 2, 3: 3\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos + 3 >= data.length) {\n    throw new Error('Ran out of data');\n  }\n\n  pxData[pxPos] = data[rawPos];\n  pxData[pxPos + 1] = data[rawPos + 1];\n  pxData[pxPos + 2] = data[rawPos + 2];\n  pxData[pxPos + 3] = data[rawPos + 3];\n}];\nvar pixelBppCustomMapper = [// 0 - dummy entry\nfunction () {}, // 1 - L\n// 0: 0, 1: 0, 2: 0, 3: 0xff\nfunction (pxData, pixelData, pxPos, maxBit) {\n  var pixel = pixelData[0];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = maxBit;\n}, // 2 - LA\n// 0: 0, 1: 0, 2: 0, 3: 1\nfunction (pxData, pixelData, pxPos) {\n  var pixel = pixelData[0];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = pixelData[1];\n}, // 3 - RGB\n// 0: 0, 1: 1, 2: 2, 3: 0xff\nfunction (pxData, pixelData, pxPos, maxBit) {\n  pxData[pxPos] = pixelData[0];\n  pxData[pxPos + 1] = pixelData[1];\n  pxData[pxPos + 2] = pixelData[2];\n  pxData[pxPos + 3] = maxBit;\n}, // 4 - RGBA\n// 0: 0, 1: 1, 2: 2, 3: 3\nfunction (pxData, pixelData, pxPos) {\n  pxData[pxPos] = pixelData[0];\n  pxData[pxPos + 1] = pixelData[1];\n  pxData[pxPos + 2] = pixelData[2];\n  pxData[pxPos + 3] = pixelData[3];\n}];\n\nfunction bitRetriever(data, depth) {\n  var leftOver = [];\n  var i = 0;\n\n  function split() {\n    if (i === data.length) {\n      throw new Error('Ran out of data');\n    }\n\n    var byte = data[i];\n    i++;\n    var byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n\n    switch (depth) {\n      default:\n        throw new Error('unrecognised depth');\n\n      case 16:\n        byte2 = data[i];\n        i++;\n        leftOver.push((byte << 8) + byte2);\n        break;\n\n      case 4:\n        byte2 = byte & 0x0f;\n        byte1 = byte >> 4;\n        leftOver.push(byte1, byte2);\n        break;\n\n      case 2:\n        byte4 = byte & 3;\n        byte3 = byte >> 2 & 3;\n        byte2 = byte >> 4 & 3;\n        byte1 = byte >> 6 & 3;\n        leftOver.push(byte1, byte2, byte3, byte4);\n        break;\n\n      case 1:\n        byte8 = byte & 1;\n        byte7 = byte >> 1 & 1;\n        byte6 = byte >> 2 & 1;\n        byte5 = byte >> 3 & 1;\n        byte4 = byte >> 4 & 1;\n        byte3 = byte >> 5 & 1;\n        byte2 = byte >> 6 & 1;\n        byte1 = byte >> 7 & 1;\n        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n        break;\n    }\n  }\n\n  return {\n    get: function (count) {\n      while (leftOver.length < count) {\n        split();\n      }\n\n      var returner = leftOver.slice(0, count);\n      leftOver = leftOver.slice(count);\n      return returner;\n    },\n    resetAfterLine: function () {\n      leftOver.length = 0;\n    },\n    end: function () {\n      if (i !== data.length) {\n        throw new Error('extra data found');\n      }\n    }\n  };\n}\n\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {\n  // eslint-disable-line max-params\n  var imageWidth = image.width;\n  var imageHeight = image.height;\n  var imagePass = image.index;\n\n  for (var y = 0; y < imageHeight; y++) {\n    for (var x = 0; x < imageWidth; x++) {\n      var pxPos = getPxPos(x, y, imagePass);\n      pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\n      rawPos += bpp; //eslint-disable-line no-param-reassign\n    }\n  }\n\n  return rawPos;\n}\n\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {\n  // eslint-disable-line max-params\n  var imageWidth = image.width;\n  var imageHeight = image.height;\n  var imagePass = image.index;\n\n  for (var y = 0; y < imageHeight; y++) {\n    for (var x = 0; x < imageWidth; x++) {\n      var pixelData = bits.get(bpp);\n      var pxPos = getPxPos(x, y, imagePass);\n      pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\n    }\n\n    bits.resetAfterLine();\n  }\n}\n\nexports.dataToBitMap = function (data, bitmapInfo) {\n  var width = bitmapInfo.width;\n  var height = bitmapInfo.height;\n  var depth = bitmapInfo.depth;\n  var bpp = bitmapInfo.bpp;\n  var interlace = bitmapInfo.interlace;\n\n  if (depth !== 8) {\n    var bits = bitRetriever(data, depth);\n  }\n\n  var pxData;\n\n  if (depth <= 8) {\n    pxData = new Buffer(width * height * 4);\n  } else {\n    pxData = new Uint16Array(width * height * 4);\n  }\n\n  var maxBit = Math.pow(2, depth) - 1;\n  var rawPos = 0;\n  var images;\n  var getPxPos;\n\n  if (interlace) {\n    images = interlaceUtils.getImagePasses(width, height);\n    getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n  } else {\n    var nonInterlacedPxPos = 0;\n\n    getPxPos = function () {\n      var returner = nonInterlacedPxPos;\n      nonInterlacedPxPos += 4;\n      return returner;\n    };\n\n    images = [{\n      width: width,\n      height: height\n    }];\n  }\n\n  for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {\n    if (depth === 8) {\n      rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\n    } else {\n      mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\n    }\n  }\n\n  if (depth === 8) {\n    if (rawPos !== data.length) {\n      throw new Error('extra data found');\n    }\n  } else {\n    bits.end();\n  }\n\n  return pxData;\n};","map":{"version":3,"names":["interlaceUtils","require","pixelBppMapper","pxData","data","pxPos","rawPos","length","Error","pixel","pixelBppCustomMapper","pixelData","maxBit","bitRetriever","depth","leftOver","i","split","byte","byte8","byte7","byte6","byte5","byte4","byte3","byte2","byte1","push","get","count","returner","slice","resetAfterLine","end","mapImage8Bit","image","getPxPos","bpp","imageWidth","width","imageHeight","height","imagePass","index","y","x","mapImageCustomBit","bits","exports","dataToBitMap","bitmapInfo","interlace","Buffer","Uint16Array","Math","pow","images","getImagePasses","getInterlaceIterator","nonInterlacedPxPos","imageIndex"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/node_modules/pngjs/lib/bitmapper.js"],"sourcesContent":["'use strict';\n\nvar interlaceUtils = require('./interlace');\n\nvar pixelBppMapper = [\n  // 0 - dummy entry\n  function() {},\n\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function(pxData, data, pxPos, rawPos) {\n    if (rawPos === data.length) {\n      throw new Error('Ran out of data');\n    }\n\n    var pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = 0xff;\n  },\n\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function(pxData, data, pxPos, rawPos) {\n    if (rawPos + 1 >= data.length) {\n      throw new Error('Ran out of data');\n    }\n\n    var pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = data[rawPos + 1];\n  },\n\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function(pxData, data, pxPos, rawPos) {\n    if (rawPos + 2 >= data.length) {\n      throw new Error('Ran out of data');\n    }\n\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = 0xff;\n  },\n\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function(pxData, data, pxPos, rawPos) {\n    if (rawPos + 3 >= data.length) {\n      throw new Error('Ran out of data');\n    }\n\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = data[rawPos + 3];\n  }\n];\n\nvar pixelBppCustomMapper = [\n  // 0 - dummy entry\n  function() {},\n\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function(pxData, pixelData, pxPos, maxBit) {\n    var pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = maxBit;\n  },\n\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function(pxData, pixelData, pxPos) {\n    var pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = pixelData[1];\n  },\n\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function(pxData, pixelData, pxPos, maxBit) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = maxBit;\n  },\n\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function(pxData, pixelData, pxPos) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = pixelData[3];\n  }\n];\n\nfunction bitRetriever(data, depth) {\n\n  var leftOver = [];\n  var i = 0;\n\n  function split() {\n    if (i === data.length) {\n      throw new Error('Ran out of data');\n    }\n    var byte = data[i];\n    i++;\n    var byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n    switch (depth) {\n      default:\n        throw new Error('unrecognised depth');\n      case 16:\n        byte2 = data[i];\n        i++;\n        leftOver.push(((byte << 8) + byte2));\n        break;\n      case 4:\n        byte2 = byte & 0x0f;\n        byte1 = byte >> 4;\n        leftOver.push(byte1, byte2);\n        break;\n      case 2:\n        byte4 = byte & 3;\n        byte3 = byte >> 2 & 3;\n        byte2 = byte >> 4 & 3;\n        byte1 = byte >> 6 & 3;\n        leftOver.push(byte1, byte2, byte3, byte4);\n        break;\n      case 1:\n        byte8 = byte & 1;\n        byte7 = byte >> 1 & 1;\n        byte6 = byte >> 2 & 1;\n        byte5 = byte >> 3 & 1;\n        byte4 = byte >> 4 & 1;\n        byte3 = byte >> 5 & 1;\n        byte2 = byte >> 6 & 1;\n        byte1 = byte >> 7 & 1;\n        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n        break;\n    }\n  }\n\n  return {\n    get: function(count) {\n      while (leftOver.length < count) {\n        split();\n      }\n      var returner = leftOver.slice(0, count);\n      leftOver = leftOver.slice(count);\n      return returner;\n    },\n    resetAfterLine: function() {\n      leftOver.length = 0;\n    },\n    end: function() {\n      if (i !== data.length) {\n        throw new Error('extra data found');\n      }\n    }\n  };\n}\n\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) { // eslint-disable-line max-params\n  var imageWidth = image.width;\n  var imageHeight = image.height;\n  var imagePass = image.index;\n  for (var y = 0; y < imageHeight; y++) {\n    for (var x = 0; x < imageWidth; x++) {\n      var pxPos = getPxPos(x, y, imagePass);\n      pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\n      rawPos += bpp; //eslint-disable-line no-param-reassign\n    }\n  }\n  return rawPos;\n}\n\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) { // eslint-disable-line max-params\n  var imageWidth = image.width;\n  var imageHeight = image.height;\n  var imagePass = image.index;\n  for (var y = 0; y < imageHeight; y++) {\n    for (var x = 0; x < imageWidth; x++) {\n      var pixelData = bits.get(bpp);\n      var pxPos = getPxPos(x, y, imagePass);\n      pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\n    }\n    bits.resetAfterLine();\n  }\n}\n\nexports.dataToBitMap = function(data, bitmapInfo) {\n\n  var width = bitmapInfo.width;\n  var height = bitmapInfo.height;\n  var depth = bitmapInfo.depth;\n  var bpp = bitmapInfo.bpp;\n  var interlace = bitmapInfo.interlace;\n\n  if (depth !== 8) {\n    var bits = bitRetriever(data, depth);\n  }\n  var pxData;\n  if (depth <= 8) {\n    pxData = new Buffer(width * height * 4);\n  }\n  else {\n    pxData = new Uint16Array(width * height * 4);\n  }\n  var maxBit = Math.pow(2, depth) - 1;\n  var rawPos = 0;\n  var images;\n  var getPxPos;\n\n  if (interlace) {\n    images = interlaceUtils.getImagePasses(width, height);\n    getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n  }\n  else {\n    var nonInterlacedPxPos = 0;\n    getPxPos = function() {\n      var returner = nonInterlacedPxPos;\n      nonInterlacedPxPos += 4;\n      return returner;\n    };\n    images = [{ width: width, height: height }];\n  }\n\n  for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {\n    if (depth === 8) {\n      rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\n    }\n    else {\n      mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\n    }\n  }\n  if (depth === 8) {\n    if (rawPos !== data.length) {\n      throw new Error('extra data found');\n    }\n  }\n  else {\n    bits.end();\n  }\n\n  return pxData;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}