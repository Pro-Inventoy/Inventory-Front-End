{"ast":null,"code":"/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\nvar jpeg = require('./jpeg'),\n    exif = require('./exif'),\n    simplify = require('./simplify');\n\nfunction ExifResult(startMarker, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset) {\n  this.startMarker = startMarker;\n  this.tags = tags;\n  this.imageSize = imageSize;\n  this.thumbnailOffset = thumbnailOffset;\n  this.thumbnailLength = thumbnailLength;\n  this.thumbnailType = thumbnailType;\n  this.app1Offset = app1Offset;\n}\n\nExifResult.prototype = {\n  hasThumbnail: function (mime) {\n    if (!this.thumbnailOffset || !this.thumbnailLength) {\n      return false;\n    }\n\n    if (typeof mime !== 'string') {\n      return true;\n    }\n\n    if (mime.toLowerCase().trim() === 'image/jpeg') {\n      return this.thumbnailType === 6;\n    }\n\n    if (mime.toLowerCase().trim() === 'image/tiff') {\n      return this.thumbnailType === 1;\n    }\n\n    return false;\n  },\n  getThumbnailOffset: function () {\n    return this.app1Offset + 6 + this.thumbnailOffset;\n  },\n  getThumbnailLength: function () {\n    return this.thumbnailLength;\n  },\n  getThumbnailBuffer: function () {\n    return this._getThumbnailStream().nextBuffer(this.thumbnailLength);\n  },\n  _getThumbnailStream: function () {\n    return this.startMarker.openWithOffset(this.getThumbnailOffset());\n  },\n  getImageSize: function () {\n    return this.imageSize;\n  },\n  getThumbnailSize: function () {\n    var stream = this._getThumbnailStream(),\n        size;\n\n    jpeg.parseSections(stream, function (sectionType, sectionStream) {\n      if (jpeg.getSectionName(sectionType).name === 'SOF') {\n        size = jpeg.getSizeFromSOFSection(sectionStream);\n      }\n    });\n    return size;\n  }\n};\n\nfunction Parser(stream) {\n  this.stream = stream;\n  this.flags = {\n    readBinaryTags: false,\n    resolveTagNames: true,\n    simplifyValues: true,\n    imageSize: true,\n    hidePointers: true,\n    returnTags: true\n  };\n}\n\nParser.prototype = {\n  enableBinaryFields: function (enable) {\n    this.flags.readBinaryTags = !!enable;\n    return this;\n  },\n  enablePointers: function (enable) {\n    this.flags.hidePointers = !enable;\n    return this;\n  },\n  enableTagNames: function (enable) {\n    this.flags.resolveTagNames = !!enable;\n    return this;\n  },\n  enableImageSize: function (enable) {\n    this.flags.imageSize = !!enable;\n    return this;\n  },\n  enableReturnTags: function (enable) {\n    this.flags.returnTags = !!enable;\n    return this;\n  },\n  enableSimpleValues: function (enable) {\n    this.flags.simplifyValues = !!enable;\n    return this;\n  },\n  parse: function () {\n    var start = this.stream.mark(),\n        stream = start.openWithOffset(0),\n        flags = this.flags,\n        tags,\n        imageSize,\n        thumbnailOffset,\n        thumbnailLength,\n        thumbnailType,\n        app1Offset,\n        tagNames,\n        getTagValue,\n        setTagValue;\n\n    if (flags.resolveTagNames) {\n      tagNames = require('./exif-tags');\n    }\n\n    if (flags.resolveTagNames) {\n      tags = {};\n\n      getTagValue = function (t) {\n        return tags[t.name];\n      };\n\n      setTagValue = function (t, value) {\n        tags[t.name] = value;\n      };\n    } else {\n      tags = [];\n\n      getTagValue = function (t) {\n        var i;\n\n        for (i = 0; i < tags.length; ++i) {\n          if (tags[i].type === t.type && tags[i].section === t.section) {\n            return tags.value;\n          }\n        }\n      };\n\n      setTagValue = function (t, value) {\n        var i;\n\n        for (i = 0; i < tags.length; ++i) {\n          if (tags[i].type === t.type && tags[i].section === t.section) {\n            tags.value = value;\n            return;\n          }\n        }\n      };\n    }\n\n    jpeg.parseSections(stream, function (sectionType, sectionStream) {\n      var validExifHeaders,\n          sectionOffset = sectionStream.offsetFrom(start);\n\n      if (sectionType === 0xE1) {\n        validExifHeaders = exif.parseTags(sectionStream, function (ifdSection, tagType, value, format) {\n          //ignore binary fields if disabled\n          if (!flags.readBinaryTags && format === 7) {\n            return;\n          }\n\n          if (tagType === 0x0201) {\n            thumbnailOffset = value[0];\n\n            if (flags.hidePointers) {\n              return;\n            }\n          } else if (tagType === 0x0202) {\n            thumbnailLength = value[0];\n\n            if (flags.hidePointers) {\n              return;\n            }\n          } else if (tagType === 0x0103) {\n            thumbnailType = value[0];\n\n            if (flags.hidePointers) {\n              return;\n            }\n          } //if flag is set to not store tags, return here after storing pointers\n\n\n          if (!flags.returnTags) {\n            return;\n          }\n\n          if (flags.simplifyValues) {\n            value = simplify.simplifyValue(value, format);\n          }\n\n          if (flags.resolveTagNames) {\n            var sectionTagNames = ifdSection === exif.GPSIFD ? tagNames.gps : tagNames.exif;\n            var name = sectionTagNames[tagType];\n\n            if (!name) {\n              name = tagNames.exif[tagType];\n            }\n\n            if (!tags.hasOwnProperty(name)) {\n              tags[name] = value;\n            }\n          } else {\n            tags.push({\n              section: ifdSection,\n              type: tagType,\n              value: value\n            });\n          }\n        });\n\n        if (validExifHeaders) {\n          app1Offset = sectionOffset;\n        }\n      } else if (flags.imageSize && jpeg.getSectionName(sectionType).name === 'SOF') {\n        imageSize = jpeg.getSizeFromSOFSection(sectionStream);\n      }\n    });\n\n    if (flags.simplifyValues) {\n      simplify.castDegreeValues(getTagValue, setTagValue);\n      simplify.castDateValues(getTagValue, setTagValue);\n    }\n\n    return new ExifResult(start, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset);\n  }\n};\nmodule.exports = Parser;","map":{"version":3,"names":["jpeg","require","exif","simplify","ExifResult","startMarker","tags","imageSize","thumbnailOffset","thumbnailLength","thumbnailType","app1Offset","prototype","hasThumbnail","mime","toLowerCase","trim","getThumbnailOffset","getThumbnailLength","getThumbnailBuffer","_getThumbnailStream","nextBuffer","openWithOffset","getImageSize","getThumbnailSize","stream","size","parseSections","sectionType","sectionStream","getSectionName","name","getSizeFromSOFSection","Parser","flags","readBinaryTags","resolveTagNames","simplifyValues","hidePointers","returnTags","enableBinaryFields","enable","enablePointers","enableTagNames","enableImageSize","enableReturnTags","enableSimpleValues","parse","start","mark","tagNames","getTagValue","setTagValue","t","value","i","length","type","section","validExifHeaders","sectionOffset","offsetFrom","parseTags","ifdSection","tagType","format","simplifyValue","sectionTagNames","GPSIFD","gps","hasOwnProperty","push","castDegreeValues","castDateValues","module","exports"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/node_modules/exif-parser/lib/parser.js"],"sourcesContent":["/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nvar jpeg = require('./jpeg'),\n\texif = require('./exif'),\n\tsimplify = require('./simplify');\n\nfunction ExifResult(startMarker, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset) {\n\tthis.startMarker = startMarker;\n\tthis.tags = tags;\n\tthis.imageSize = imageSize;\n\tthis.thumbnailOffset = thumbnailOffset;\n\tthis.thumbnailLength = thumbnailLength;\n\tthis.thumbnailType = thumbnailType;\n\tthis.app1Offset = app1Offset;\n}\n\nExifResult.prototype = {\n\thasThumbnail: function(mime) {\n\t\tif(!this.thumbnailOffset || !this.thumbnailLength) {\n\t\t\treturn false;\n\t\t}\n\t\tif(typeof mime !== 'string') {\n\t\t\treturn true;\n\t\t}\n\t\tif(mime.toLowerCase().trim() === 'image/jpeg') {\n\t\t\treturn this.thumbnailType === 6;\n\t\t}\n\t\tif(mime.toLowerCase().trim() === 'image/tiff') {\n\t\t\treturn this.thumbnailType === 1;\n\t\t}\n\t\treturn false;\n\t},\n\tgetThumbnailOffset: function() {\n\t\treturn this.app1Offset + 6 + this.thumbnailOffset;\n\t},\n\tgetThumbnailLength: function() {\n\t\treturn this.thumbnailLength;\n\t},\n\tgetThumbnailBuffer: function() {\n\t\treturn this._getThumbnailStream().nextBuffer(this.thumbnailLength);\n\t},\n\t_getThumbnailStream: function() {\n\t\treturn this.startMarker.openWithOffset(this.getThumbnailOffset());\n\t},\n\tgetImageSize: function() {\n\t\treturn this.imageSize;\n\t},\n\tgetThumbnailSize: function() {\n\t\tvar stream = this._getThumbnailStream(), size;\n\t\tjpeg.parseSections(stream, function(sectionType, sectionStream) {\n\t\t\tif(jpeg.getSectionName(sectionType).name === 'SOF') {\n\t\t\t\tsize = jpeg.getSizeFromSOFSection(sectionStream);\n\t\t\t}\n\t\t});\n\t\treturn size;\n\t}\n};\n\nfunction Parser(stream) {\n\tthis.stream = stream;\n\tthis.flags = {\n\t\treadBinaryTags: false,\n\t\tresolveTagNames: true,\n\t\tsimplifyValues: true,\n\t\timageSize: true,\n\t\thidePointers: true,\n\t\treturnTags: true\n\t};\n}\n\nParser.prototype = {\n\tenableBinaryFields: function(enable) {\n\t\tthis.flags.readBinaryTags = !!enable;\n\t\treturn this;\n\t},\n\tenablePointers: function(enable) {\n\t\tthis.flags.hidePointers = !enable;\n\t\treturn this;\n\t},\n\tenableTagNames: function(enable) {\n\t\tthis.flags.resolveTagNames = !!enable;\n\t\treturn this;\n\t},\n\tenableImageSize: function(enable) {\n\t\tthis.flags.imageSize = !!enable;\n\t\treturn this;\n\t},\n\tenableReturnTags: function(enable) {\n\t\tthis.flags.returnTags = !!enable;\n\t\treturn this;\n\t},\n\tenableSimpleValues: function(enable) {\n\t\tthis.flags.simplifyValues = !!enable;\n\t\treturn this;\n\t},\n\tparse: function() {\n\t\tvar start = this.stream.mark(),\n\t\t\tstream = start.openWithOffset(0),\n\t\t\tflags = this.flags,\n\t\t\ttags,\n\t\t\timageSize,\n\t\t\tthumbnailOffset,\n\t\t\tthumbnailLength,\n\t\t\tthumbnailType,\n\t\t\tapp1Offset,\n\t\t\ttagNames,\n\t\t\tgetTagValue, setTagValue;\n\t\tif(flags.resolveTagNames) {\n\t\t\ttagNames = require('./exif-tags');\n\t\t}\n\t\tif(flags.resolveTagNames) {\n\t\t\ttags = {};\n\t\t\tgetTagValue = function(t) {\n\t\t\t\treturn tags[t.name];\n\t\t\t};\n\t\t\tsetTagValue = function(t, value) {\n\t\t\t\ttags[t.name] = value;\n\t\t\t};\n\t\t} else {\n\t\t\ttags = [];\n\t\t\tgetTagValue = function(t) {\n\t\t\t\tvar i;\n\t\t\t\tfor(i = 0; i < tags.length; ++i) {\n\t\t\t\t\tif(tags[i].type === t.type && tags[i].section === t.section) {\n\t\t\t\t\t\treturn tags.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTagValue = function(t, value) {\n\t\t\t\tvar i;\n\t\t\t\tfor(i = 0; i < tags.length; ++i) {\n\t\t\t\t\tif(tags[i].type === t.type && tags[i].section === t.section) {\n\t\t\t\t\t\ttags.value = value;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tjpeg.parseSections(stream, function(sectionType, sectionStream) {\n\t\t\tvar validExifHeaders, sectionOffset = sectionStream.offsetFrom(start);\n\t\t\tif(sectionType === 0xE1) {\n\t\t\t\tvalidExifHeaders = exif.parseTags(sectionStream, function(ifdSection, tagType, value, format) {\n\t\t\t\t\t//ignore binary fields if disabled\n\t\t\t\t\tif(!flags.readBinaryTags && format === 7) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tagType === 0x0201) {\n\t\t\t\t\t\tthumbnailOffset = value[0];\n\t\t\t\t\t\tif(flags.hidePointers) {return;}\n\t\t\t\t\t} else if(tagType === 0x0202) {\n\t\t\t\t\t\tthumbnailLength = value[0];\n\t\t\t\t\t\tif(flags.hidePointers) {return;}\n\t\t\t\t\t} else if(tagType === 0x0103) {\n\t\t\t\t\t\tthumbnailType = value[0];\n\t\t\t\t\t\tif(flags.hidePointers) {return;}\n\t\t\t\t\t}\n\t\t\t\t\t//if flag is set to not store tags, return here after storing pointers\n\t\t\t\t\tif(!flags.returnTags) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(flags.simplifyValues) {\n\t\t\t\t\t\tvalue = simplify.simplifyValue(value, format);\n\t\t\t\t\t}\n\t\t\t\t\tif(flags.resolveTagNames) {\n\t\t\t\t\t\tvar sectionTagNames = ifdSection === exif.GPSIFD ? tagNames.gps : tagNames.exif;\n\t\t\t\t\t\tvar name = sectionTagNames[tagType];\n\t\t\t\t\t\tif(!name) {\n\t\t\t\t\t\t\tname = tagNames.exif[tagType];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tags.hasOwnProperty(name)) {\n\t\t\t\t\t\t\ttags[name] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttags.push({\n\t\t\t\t\t\t\tsection: ifdSection,\n\t\t\t\t\t\t\ttype: tagType,\n\t\t\t\t\t\t\tvalue: value\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(validExifHeaders) {\n\t\t\t\t\tapp1Offset = sectionOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(flags.imageSize && jpeg.getSectionName(sectionType).name === 'SOF') {\n\t\t\t\timageSize = jpeg.getSizeFromSOFSection(sectionStream);\n\t\t\t}\n\t\t});\n\n\t\tif(flags.simplifyValues) {\n\t\t\tsimplify.castDegreeValues(getTagValue, setTagValue);\n\t\t\tsimplify.castDateValues(getTagValue, setTagValue);\n\t\t}\n\n\t\treturn new ExifResult(start, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset);\n\t}\n};\n\n\n\nmodule.exports = Parser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}