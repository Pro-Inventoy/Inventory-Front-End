{"ast":null,"code":"import client from './supabase-client.js';\nexport function getUser() {\n  console.log('gettinuser');\n  return client.auth.user();\n}\nexport async function signUp(credentials) {\n  return await client.auth.signUp(credentials);\n}\nexport async function signIn(credentials) {\n  return await client.auth.signIn(credentials);\n}\nexport async function signOut() {\n  return await client.auth.signOut();\n}\nexport function onAuthChange(handleAuthChange) {\n  return client.auth.onAuthStateChange(handleAuthChange);\n}\nconst PROFILE = 'profile';\nexport function getLocalProfile() {\n  const json = localStorage.getItem(PROFILE);\n  if (!json) return null;\n\n  try {\n    return JSON.parse(json);\n  } catch (err) {\n    localStorage.removeItem(PROFILE);\n  }\n}\nexport function saveLocalProfile(profile) {\n  localStorage.setItem(PROFILE, JSON.stringify(profile));\n}\nexport function removeLocalProfile() {\n  localStorage.removeItem(PROFILE);\n}\nexport async function getProfile() {\n  const user = getUser();\n  return await client.from('profiles').select().eq('id', user.id).single();\n}\nexport async function upsertProfile(profile) {\n  const response = await client.from('profiles').upsert(profile).eq('id', profile.id).single();\n  return response;\n}\nconst BUCKET_NAME = 'avatars';\nexport async function uploadAvatar(userId, imageFile) {\n  // put into a folder...\n  const imageName = `${userId}/${imageFile.name}`; // we can use the storage bucket to upload the image,\n  // then use it to get the public URL\n\n  const bucket = client.storage.from(BUCKET_NAME);\n  const {\n    data,\n    error\n  } = await bucket.upload(imageName, imageFile, {\n    cacheControl: '3600',\n    // in this case, we will _replace_ any\n    // existing file with same name.\n    upsert: true\n  });\n  let url = null;\n\n  if (!error) {\n    url = bucket.getPublicUrl(data.Key.replace(`${BUCKET_NAME}/`, '')).publicURL;\n  }\n\n  return {\n    url,\n    error\n  };\n}","map":{"version":3,"names":["client","getUser","console","log","auth","user","signUp","credentials","signIn","signOut","onAuthChange","handleAuthChange","onAuthStateChange","PROFILE","getLocalProfile","json","localStorage","getItem","JSON","parse","err","removeItem","saveLocalProfile","profile","setItem","stringify","removeLocalProfile","getProfile","from","select","eq","id","single","upsertProfile","response","upsert","BUCKET_NAME","uploadAvatar","userId","imageFile","imageName","name","bucket","storage","data","error","upload","cacheControl","url","getPublicUrl","Key","replace","publicURL"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/src/state/services/user-service.js"],"sourcesContent":["import client from './supabase-client.js';\r\n\r\nexport function getUser() {\r\n    console.log('gettinuser')\r\n  return client.auth.user();\r\n}\r\n\r\nexport async function signUp(credentials) {\r\n  return await client.auth.signUp(credentials);\r\n}\r\n\r\nexport async function signIn(credentials) {\r\n  return await client.auth.signIn(credentials);\r\n}\r\n\r\nexport async function signOut() {\r\n  return await client.auth.signOut();\r\n}\r\n\r\nexport function onAuthChange(handleAuthChange) {\r\n  return client.auth.onAuthStateChange(handleAuthChange);\r\n}\r\n\r\nconst PROFILE = 'profile';\r\n\r\nexport function getLocalProfile() {\r\n  const json = localStorage.getItem(PROFILE);\r\n  if (!json) return null;\r\n  try {\r\n    return JSON.parse(json);\r\n  } catch (err) {\r\n    localStorage.removeItem(PROFILE);\r\n  }\r\n}\r\n\r\nexport function saveLocalProfile(profile) {\r\n  localStorage.setItem(PROFILE, JSON.stringify(profile));\r\n}\r\n\r\nexport function removeLocalProfile() {\r\n  localStorage.removeItem(PROFILE);\r\n}\r\n\r\nexport async function getProfile() {\r\n  const user = getUser();\r\n\r\n  return await client\r\n    .from('profiles')\r\n    .select()\r\n    .eq('id', user.id)\r\n    .single();\r\n}\r\n\r\nexport async function upsertProfile(profile) {\r\n  const response = await client\r\n    .from('profiles')\r\n    .upsert(profile)\r\n    .eq('id', profile.id)\r\n    .single();\r\n  return response;\r\n}\r\n\r\nconst BUCKET_NAME = 'avatars';\r\n\r\nexport async function uploadAvatar(userId, imageFile) {\r\n  // put into a folder...\r\n  const imageName = `${userId}/${imageFile.name}`;\r\n\r\n  // we can use the storage bucket to upload the image,\r\n  // then use it to get the public URL\r\n  const bucket = client.storage.from(BUCKET_NAME);\r\n\r\n  const { data, error } = await bucket.upload(imageName, imageFile, {\r\n    cacheControl: '3600',\r\n    // in this case, we will _replace_ any\r\n    // existing file with same name.\r\n    upsert: true,\r\n  });\r\n\r\n  let url = null;\r\n\r\n  if (!error) {\r\n    url = bucket.getPublicUrl(\r\n      data.Key.replace(`${BUCKET_NAME}/`, '')\r\n    ).publicURL;\r\n  }\r\n\r\n  return { url, error };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}