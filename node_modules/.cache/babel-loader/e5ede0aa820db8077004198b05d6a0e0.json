{"ast":null,"code":"/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code;\n  info;\n\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;AAKA,OAAM,MAAOA,UAAP,SAA0BC,KAA1B,CAA+B;EACnCC,IAAI;EACJC,IAAI;;EAEJC,YAAYF,IAAZ,EAA0BG,OAA1B,EAAyC;IACvC,MAAMA,OAAN;IACA,KAAKH,IAAL,GAAYA,IAAZ;EACD;;AAPkC","names":["CodedError","Error","code","info","constructor","message"],"sources":["C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\expo-modules-core\\src\\errors\\CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}