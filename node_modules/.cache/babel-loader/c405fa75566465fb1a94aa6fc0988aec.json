{"ast":null,"code":"import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\n\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName, propertyName) {\n    super('ERR_UNAVAILABLE', `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;;;;;;AAKA,OAAM,MAAOC,mBAAP,SAAmCD,UAAnC,CAA6C;EACjDE,YAAYC,UAAZ,EAAgCC,YAAhC,EAAoD;IAClD,MACE,iBADF,EAEE,0BAA0BD,UAAU,IAAIC,YAAY,wBAAwBL,QAAQ,CAACM,EAAE,oEAFzF;EAID;;AANgD","names":["Platform","CodedError","UnavailabilityError","constructor","moduleName","propertyName","OS"],"sources":["C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\expo-modules-core\\src\\errors\\UnavailabilityError.ts"],"sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}