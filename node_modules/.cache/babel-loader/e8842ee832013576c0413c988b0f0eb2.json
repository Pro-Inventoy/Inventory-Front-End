{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khaym\\\\Desktop\\\\finalproject\\\\Inventory-Front-End\\\\src\\\\components\\\\Scanner\\\\Scanner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Measure } from 'react-measure';\nimport { useUserMedia } from './useUserMedia ';\nimport { useCardRatio } from './useCardRatio';\nimport { useOffsets } from './useOffsets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\nexport default function Scanner() {\n  _s();\n\n  const videoRef = useRef();\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [container, setContainer] = useState({\n    height: 0,\n    width: 0\n  });\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth, videoRef.current && videoRef.current.videoHeight, container.width, container.height);\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      height: Math.round(contentRect.bounds.width / aspectRatio),\n      width: contentRect.bounds.width\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    videoRef.current.play();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Measure, {\n    bounds: true,\n    onResize: handleResize,\n    children: _ref => {\n      let {\n        measureRef\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: measureRef,\n        style: {\n          height: `${container.height}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          onCanPlay: handleCanPlay,\n          style: {\n            top: `-${offsets.y}px`,\n            left: `-${offsets.x}px`\n          },\n          autoPlay: true,\n          playsInline: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scanner, \"3KzFyOIhie98o/pFVeLLeHmLccY=\", false, function () {\n  return [useUserMedia, useCardRatio, useOffsets];\n});\n\n_c = Scanner;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useRef","useState","Measure","useUserMedia","useCardRatio","useOffsets","CAPTURE_OPTIONS","audio","video","facingMode","Scanner","videoRef","mediaStream","container","setContainer","height","width","aspectRatio","calculateRatio","offsets","current","videoWidth","videoHeight","srcObject","handleResize","contentRect","Math","round","bounds","handleCanPlay","play","measureRef","top","y","left","x"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/src/components/Scanner/Scanner.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Measure } from 'react-measure';\r\nimport { useUserMedia } from './useUserMedia ';\r\nimport { useCardRatio } from './useCardRatio';\r\nimport { useOffsets } from './useOffsets';\r\n\r\nconst CAPTURE_OPTIONS = {\r\n    audio: false,\r\n    video: { facingMode: \"environment\" },\r\n};\r\n\r\nexport default function Scanner() {\r\n  const videoRef = useRef();\r\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\r\n  const [container, setContainer] = useState({ height: 0, width: 0 });\r\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\r\n  const offsets = useOffsets(\r\n    videoRef.current && videoRef.current.videoWidth,\r\n    videoRef.current && videoRef.current.videoHeight,\r\n    container.width,\r\n    container.height\r\n  );\r\n\r\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\r\n    videoRef.current.srcObject = mediaStream;\r\n  }\r\n\r\n  function handleResize(contentRect) {\r\n    setContainer({\r\n      height: Math.round(contentRect.bounds.width / aspectRatio),\r\n      width: contentRect.bounds.width\r\n    });\r\n  }\r\n\r\n  function handleCanPlay() {\r\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\r\n    videoRef.current.play();\r\n  }\r\n\r\n  return (\r\n    <Measure bounds onResize={handleResize}>\r\n      {({ measureRef }) => (\r\n        <div ref={measureRef} style={{ height: `${container.height}px` }}>\r\n          <video \r\n            ref={videoRef}\r\n            onCanPlay={handleCanPlay}\r\n            style={{ top: `-${offsets.y}px`, left: `-${offsets.x}px` }}\r\n            autoPlay \r\n            playsInline \r\n            muted\r\n          />\r\n        </div>\r\n      )}\r\n    </Measure>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,eAAe,GAAG;EACpBC,KAAK,EAAE,KADa;EAEpBC,KAAK,EAAE;IAAEC,UAAU,EAAE;EAAd;AAFa,CAAxB;AAKA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAChC,MAAMC,QAAQ,GAAGX,MAAM,EAAvB;EACA,MAAMY,WAAW,GAAGT,YAAY,CAACG,eAAD,CAAhC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;IAAEc,MAAM,EAAE,CAAV;IAAaC,KAAK,EAAE;EAApB,CAAD,CAA1C;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,YAAY,CAAC,KAAD,CAAlD;EACA,MAAMe,OAAO,GAAGd,UAAU,CACxBM,QAAQ,CAACS,OAAT,IAAoBT,QAAQ,CAACS,OAAT,CAAiBC,UADb,EAExBV,QAAQ,CAACS,OAAT,IAAoBT,QAAQ,CAACS,OAAT,CAAiBE,WAFb,EAGxBT,SAAS,CAACG,KAHc,EAIxBH,SAAS,CAACE,MAJc,CAA1B;;EAOA,IAAIH,WAAW,IAAID,QAAQ,CAACS,OAAxB,IAAmC,CAACT,QAAQ,CAACS,OAAT,CAAiBG,SAAzD,EAAoE;IAClEZ,QAAQ,CAACS,OAAT,CAAiBG,SAAjB,GAA6BX,WAA7B;EACD;;EAED,SAASY,YAAT,CAAsBC,WAAtB,EAAmC;IACjCX,YAAY,CAAC;MACXC,MAAM,EAAEW,IAAI,CAACC,KAAL,CAAWF,WAAW,CAACG,MAAZ,CAAmBZ,KAAnB,GAA2BC,WAAtC,CADG;MAEXD,KAAK,EAAES,WAAW,CAACG,MAAZ,CAAmBZ;IAFf,CAAD,CAAZ;EAID;;EAED,SAASa,aAAT,GAAyB;IACvBX,cAAc,CAACP,QAAQ,CAACS,OAAT,CAAiBE,WAAlB,EAA+BX,QAAQ,CAACS,OAAT,CAAiBC,UAAhD,CAAd;IACAV,QAAQ,CAACS,OAAT,CAAiBU,IAAjB;EACD;;EAED,oBACE,QAAC,OAAD;IAAS,MAAM,MAAf;IAAgB,QAAQ,EAAEN,YAA1B;IAAA,UACG;MAAA,IAAC;QAAEO;MAAF,CAAD;MAAA,oBACC;QAAK,GAAG,EAAEA,UAAV;QAAsB,KAAK,EAAE;UAAEhB,MAAM,EAAG,GAAEF,SAAS,CAACE,MAAO;QAA9B,CAA7B;QAAA,uBACE;UACE,GAAG,EAAEJ,QADP;UAEE,SAAS,EAAEkB,aAFb;UAGE,KAAK,EAAE;YAAEG,GAAG,EAAG,IAAGb,OAAO,CAACc,CAAE,IAArB;YAA0BC,IAAI,EAAG,IAAGf,OAAO,CAACgB,CAAE;UAA9C,CAHT;UAIE,QAAQ,MAJV;UAKE,WAAW,MALb;UAME,KAAK;QANP;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADD;IAAA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA5CuBzB,O;UAEFP,Y,EAEkBC,Y,EACtBC,U;;;KALMK,O;AA4CvB"},"metadata":{},"sourceType":"module"}