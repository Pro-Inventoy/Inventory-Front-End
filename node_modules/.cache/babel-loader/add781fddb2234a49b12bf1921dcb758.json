{"ast":null,"code":"var exif = require('./exif');\n\nvar date = require('./date');\n\nvar degreeTags = [{\n  section: exif.GPSIFD,\n  type: 0x0002,\n  name: 'GPSLatitude',\n  refType: 0x0001,\n  refName: 'GPSLatitudeRef',\n  posVal: 'N'\n}, {\n  section: exif.GPSIFD,\n  type: 0x0004,\n  name: 'GPSLongitude',\n  refType: 0x0003,\n  refName: 'GPSLongitudeRef',\n  posVal: 'E'\n}];\nvar dateTags = [{\n  section: exif.SubIFD,\n  type: 0x0132,\n  name: 'ModifyDate'\n}, {\n  section: exif.SubIFD,\n  type: 0x9003,\n  name: 'DateTimeOriginal'\n}, {\n  section: exif.SubIFD,\n  type: 0x9004,\n  name: 'CreateDate'\n}, {\n  section: exif.SubIFD,\n  type: 0x0132,\n  name: 'ModifyDate'\n}];\nmodule.exports = {\n  castDegreeValues: function (getTagValue, setTagValue) {\n    degreeTags.forEach(function (t) {\n      var degreeVal = getTagValue(t);\n\n      if (degreeVal) {\n        var degreeRef = getTagValue({\n          section: t.section,\n          type: t.refType,\n          name: t.refName\n        });\n        var degreeNumRef = degreeRef === t.posVal ? 1 : -1;\n        var degree = (degreeVal[0] + degreeVal[1] / 60 + degreeVal[2] / 3600) * degreeNumRef;\n        setTagValue(t, degree);\n      }\n    });\n  },\n  castDateValues: function (getTagValue, setTagValue) {\n    dateTags.forEach(function (t) {\n      var dateStrVal = getTagValue(t);\n\n      if (dateStrVal) {\n        //some easy checks to determine two common date formats\n        var timestamp = date.parseExifDate(dateStrVal);\n\n        if (typeof timestamp !== 'undefined') {\n          setTagValue(t, timestamp);\n        }\n      }\n    });\n  },\n  simplifyValue: function (values, format) {\n    if (Array.isArray(values)) {\n      values = values.map(function (value) {\n        if (format === 10 || format === 5) {\n          return value[0] / value[1];\n        }\n\n        return value;\n      });\n\n      if (values.length === 1) {\n        values = values[0];\n      }\n    }\n\n    return values;\n  }\n};","map":{"version":3,"names":["exif","require","date","degreeTags","section","GPSIFD","type","name","refType","refName","posVal","dateTags","SubIFD","module","exports","castDegreeValues","getTagValue","setTagValue","forEach","t","degreeVal","degreeRef","degreeNumRef","degree","castDateValues","dateStrVal","timestamp","parseExifDate","simplifyValue","values","format","Array","isArray","map","value","length"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/node_modules/exif-parser/lib/simplify.js"],"sourcesContent":["var exif = require('./exif');\nvar date = require('./date');\n\nvar degreeTags = [{\n\tsection: exif.GPSIFD,\n\ttype: 0x0002,\n\tname: 'GPSLatitude',\n\trefType: 0x0001,\n\trefName: 'GPSLatitudeRef',\n\tposVal: 'N'\n},\n{\n\tsection: exif.GPSIFD,\n\ttype: 0x0004,\n\tname: 'GPSLongitude',\n\trefType: 0x0003,\n\trefName: 'GPSLongitudeRef',\n\tposVal: 'E'\n}];\nvar dateTags = [{\n\tsection: exif.SubIFD,\n\ttype: 0x0132,\n\tname: 'ModifyDate'\n},\n{\n\tsection: exif.SubIFD,\n\ttype: 0x9003,\n\tname: 'DateTimeOriginal'\n},\n{\n\tsection: exif.SubIFD,\n\ttype: 0x9004,\n\tname: 'CreateDate'\n},\n{\n\tsection: exif.SubIFD,\n\ttype: 0x0132,\n\tname : 'ModifyDate',\n}];\n\nmodule.exports = {\n\tcastDegreeValues: function(getTagValue, setTagValue) {\n\t\tdegreeTags.forEach(function(t) {\n\t\t\tvar degreeVal = getTagValue(t);\n\t\t\tif(degreeVal) {\n\t\t\t\tvar degreeRef = getTagValue({section: t.section, type: t.refType, name: t.refName});\n\t\t\t\tvar degreeNumRef = degreeRef === t.posVal ? 1 : -1;\n\t\t\t\tvar degree = (degreeVal[0] + (degreeVal[1] / 60) + (degreeVal[2] / 3600)) * degreeNumRef;\n\t\t\t\tsetTagValue(t, degree);\n\t\t\t}\n\t\t});\n\t},\n\tcastDateValues: function(getTagValue, setTagValue) {\n\t\tdateTags.forEach(function(t) {\n\t\t\tvar dateStrVal = getTagValue(t);\n\t\t\tif(dateStrVal) {\n\t\t\t\t//some easy checks to determine two common date formats\n\t\t\t\tvar timestamp = date.parseExifDate(dateStrVal);\n\t\t\t\tif(typeof timestamp !== 'undefined') {\n\t\t\t\t\tsetTagValue(t, timestamp);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tsimplifyValue: function(values, format) {\n\t\tif(Array.isArray(values)) {\n\t\t\tvalues = values.map(function(value) {\n\t\t\t\tif(format === 10 || format === 5) {\n\t\t\t\t\treturn value[0] / value[1];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tif(values.length === 1) {\n\t\t\t\tvalues = values[0];\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}