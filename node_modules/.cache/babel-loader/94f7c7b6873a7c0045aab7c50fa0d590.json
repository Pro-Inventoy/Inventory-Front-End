{"ast":null,"code":"'use strict';\n\nvar constants = require('./constants');\n\nvar CrcStream = require('./crc');\n\nvar bitPacker = require('./bitpacker');\n\nvar filter = require('./filter-pack');\n\nvar zlib = require('zlib');\n\nvar Packer = module.exports = function (options) {\n  this._options = options;\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8; // This is outputColorType\n\n  options.colorType = typeof options.colorType === 'number' ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType = typeof options.inputColorType === 'number' ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\n\n  if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) === -1) {\n    throw new Error('option color type:' + options.colorType + ' is not supported at present');\n  }\n\n  if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.inputColorType) === -1) {\n    throw new Error('option input color type:' + options.inputColorType + ' is not supported at present');\n  }\n\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');\n  }\n};\n\nPacker.prototype.getDeflateOptions = function () {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy\n  };\n};\n\nPacker.prototype.createDeflate = function () {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData = function (data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  var packedData = bitPacker(data, width, height, this._options); // filter pixel data\n\n  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  var filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\n\nPacker.prototype._packChunk = function (type, data) {\n  var len = data ? data.length : 0;\n  var buf = new Buffer(len + 12);\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n\n  if (data) {\n    data.copy(buf, 8);\n  }\n\n  buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n  return buf;\n};\n\nPacker.prototype.packGAMA = function (gamma) {\n  var buf = new Buffer(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\n\nPacker.prototype.packIHDR = function (width, height) {\n  var buf = new Buffer(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n\n  buf[9] = this._options.colorType; // colorType\n\n  buf[10] = 0; // compression\n\n  buf[11] = 0; // filter\n\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\n\nPacker.prototype.packIDAT = function (data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\n\nPacker.prototype.packIEND = function () {\n  return this._packChunk(constants.TYPE_IEND, null);\n};","map":{"version":3,"names":["constants","require","CrcStream","bitPacker","filter","zlib","Packer","module","exports","options","_options","deflateChunkSize","deflateLevel","deflateStrategy","inputHasAlpha","deflateFactory","createDeflate","bitDepth","colorType","COLORTYPE_COLOR_ALPHA","inputColorType","COLORTYPE_GRAYSCALE","COLORTYPE_COLOR","COLORTYPE_ALPHA","indexOf","Error","prototype","getDeflateOptions","chunkSize","level","strategy","filterData","data","width","height","packedData","bpp","COLORTYPE_TO_BPP_MAP","filteredData","_packChunk","type","len","length","buf","Buffer","writeUInt32BE","copy","writeInt32BE","crc32","slice","packGAMA","gamma","Math","floor","GAMMA_DIVISION","TYPE_gAMA","packIHDR","TYPE_IHDR","packIDAT","TYPE_IDAT","packIEND","TYPE_IEND"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/node_modules/pngjs/lib/packer.js"],"sourcesContent":["'use strict';\n\nvar constants = require('./constants');\nvar CrcStream = require('./crc');\nvar bitPacker = require('./bitpacker');\nvar filter = require('./filter-pack');\nvar zlib = require('zlib');\n\nvar Packer = module.exports = function(options) {\n  this._options = options;\n\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  // This is outputColorType\n  options.colorType = (typeof options.colorType === 'number') ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType = (typeof options.inputColorType === 'number') ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\n\n  if ([\n    constants.COLORTYPE_GRAYSCALE,\n    constants.COLORTYPE_COLOR,\n    constants.COLORTYPE_COLOR_ALPHA,\n    constants.COLORTYPE_ALPHA\n  ].indexOf(options.colorType) === -1) {\n    throw new Error('option color type:' + options.colorType + ' is not supported at present');\n  }\n  if ([\n    constants.COLORTYPE_GRAYSCALE,\n    constants.COLORTYPE_COLOR,\n    constants.COLORTYPE_COLOR_ALPHA,\n    constants.COLORTYPE_ALPHA\n  ].indexOf(options.inputColorType) === -1) {\n    throw new Error('option input color type:' + options.inputColorType + ' is not supported at present');\n  }\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');\n  }\n};\n\nPacker.prototype.getDeflateOptions = function() {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy\n  };\n};\n\nPacker.prototype.createDeflate = function() {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData = function(data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  var packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  var filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\n\nPacker.prototype._packChunk = function(type, data) {\n\n  var len = (data ? data.length : 0);\n  var buf = new Buffer(len + 12);\n\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n\n  if (data) {\n    data.copy(buf, 8);\n  }\n\n  buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n  return buf;\n};\n\nPacker.prototype.packGAMA = function(gamma) {\n  var buf = new Buffer(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\n\nPacker.prototype.packIHDR = function(width, height) {\n\n  var buf = new Buffer(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\n\nPacker.prototype.packIDAT = function(data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\n\nPacker.prototype.packIEND = function() {\n  return this._packChunk(constants.TYPE_IEND, null);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}