{"ast":null,"code":"import * as n from \"jimp\";\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nfunction e(n, e, t, w) {\n  return new (t || (t = Promise))(function (o, r) {\n    function c(n) {\n      try {\n        s(w.next(n));\n      } catch (n) {\n        r(n);\n      }\n    }\n\n    function i(n) {\n      try {\n        s(w.throw(n));\n      } catch (n) {\n        r(n);\n      }\n    }\n\n    function s(n) {\n      var e;\n      n.done ? o(n.value) : (e = n.value, e instanceof t ? e : new t(function (n) {\n        n(e);\n      })).then(c, i);\n    }\n\n    s((w = w.apply(n, e || [])).next());\n  });\n}\n\nconst t = {\n  nnnnnww: \"0\",\n  nnnnwwn: \"1\",\n  nnnwnnw: \"2\",\n  wwnnnnn: \"3\",\n  nnwnnwn: \"4\",\n  wnnnnwn: \"5\",\n  nwnnnnw: \"6\",\n  nwnnwnn: \"7\",\n  nwwnnnn: \"8\",\n  wnnwnnn: \"9\",\n  nnnwwnn: \"-\",\n  nnwwnnn: \"$\",\n  wnnnwnw: \":\",\n  wnwnnnw: \"/\",\n  wnwnwnn: \".\",\n  nnwwwww: \"+\",\n  nnwwnwn: \"A\",\n  nnnwnww: \"B\",\n  nwnwnnw: \"C\",\n  nnnwwwn: \"D\"\n};\n\nfunction w(n) {\n  const e = [],\n        w = Math.ceil(n.reduce((n, e) => (n + e) / 2, 0));\n\n  for (; n.length > 0;) {\n    const o = n.splice(0, 8).splice(0, 7).map(n => n < w ? \"n\" : \"w\").join(\"\");\n    e.push(t[o]);\n  }\n\n  return e.join(\"\");\n}\n\nconst o = [\"212222\", \"222122\", \"222221\", \"121223\", \"121322\", \"131222\", \"122213\", \"122312\", \"132212\", \"221213\", \"221312\", \"231212\", \"112232\", \"122132\", \"122231\", \"113222\", \"123122\", \"123221\", \"223211\", \"221132\", \"221231\", \"213212\", \"223112\", \"312131\", \"311222\", \"321122\", \"321221\", \"312212\", \"322112\", \"322211\", \"212123\", \"212321\", \"232121\", \"111323\", \"131123\", \"131321\", \"112313\", \"132113\", \"132311\", \"211313\", \"231113\", \"231311\", \"112133\", \"112331\", \"132131\", \"113123\", \"113321\", \"133121\", \"313121\", \"211331\", \"231131\", \"213113\", \"213311\", \"213131\", \"311123\", \"311321\", \"331121\", \"312113\", \"312311\", \"332111\", \"314111\", \"221411\", \"431111\", \"111224\", \"111422\", \"121124\", \"121421\", \"141122\", \"141221\", \"112214\", \"112412\", \"122114\", \"122411\", \"142112\", \"142211\", \"241211\", \"221114\", \"413111\", \"241112\", \"134111\", \"111242\", \"121142\", \"121241\", \"114212\", \"124112\", \"124211\", \"411212\", \"421112\", \"421211\", \"212141\", \"214121\", \"412121\", \"111143\", \"111341\", \"131141\", \"114113\", \"114311\", \"411113\", \"411311\", \"113141\", \"114131\", \"311141\", \"411131\", \"211412\", \"211214\", \"211232\", \"233111\", \"211133\", \"2331112\"],\n      rhift B\", \"Code C\", \"Code B\", \"FNC 4\", \"FNC 1\", \"Code A\", \"Code B\", \"Code C\", \"Stop\", \"Reverse Stop\"],\n      c = [\" \", \"!\", '\"', \"#\", \"$\", \"%\", \"&\", \"'\", \"(\", \")\", \"*\", \"+\", \",\", \"-\", \".\", \"/\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \":\", \";\", \"<\", \"=\", \">\", \"?\", \"@\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"[\", \"\\\\\", \"]\", \"^\", \"_\", \"`\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"{\", \"|\", \"}\", \"~\", \"DEL\", \"FNC 3\", \"FNC 2\", \"Shift A\", \"Code C\", \"FNC 4\", \"Code A\", \"FNC 1\", \"Code A\", \"Code B\", \"Code C\", \"Stop\", \"Reverse Stop\"],\n      i = [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"60\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"Code B\", \"Code A\", \"FNC 1\", \"Code A\", \"Code B\", \"Code C\", \"Stop\", \"Reverse Stop\"];\n\nfunction s(n) {\n  const e = [];\n  let t,\n      w,\n      s = c;\n\n  const a = (n => {\n    const e = n.length - 13,\n          t = n.reduce((n, t, w) => w >= e ? n : n + t, 0) / (11 * Math.ceil(e / 6));\n    return n.map(n => Math.round(n / t) || 1);\n  })(n);\n\n  if (!a) return \"\";\n  a.pop();\n\n  for (let n = 0; 6 * n < a.length - 13; n += 1) {\n    t = a.slice(6 * n, 6 * (n + 1)).join(\"\");\n    const l = s[o.indexOf(t)];\n\n    switch (l) {\n      case \"Code A\":\n        s = r;\n        break;\n\n      case \"Code B\":\n        s = c;\n        break;\n\n      case \"Code C\":\n        s = i;\n        break;\n\n      case \"FNC 4\":\n        break;\n\n      default:\n        l ? (\"FNC 4\" === w ? e.push(l.charCodeAt(0) + 128) : e.push(l), w = l) : e.push(\"?\");\n    }\n  }\n\n  return e.join(\"\");\n}\n\nconst a = {\n  nnnwwnwnn: \"0\",\n  wnnwnnnnw: \"1\",\n  nnwwnnnnw: \"2\",\n  wnwwnnnnn: \"3\",\n  nnnwwnnnw: \"4\",\n  wnnwwnnnn: \"5\",\n  nnwwwnnnn: \"6\",\n  nnnwnnwnw: \"7\",\n  wnnwnnwnn: \"8\",\n  nnwwnnwnn: \"9\",\n  wnnnnwnnw: \"A\",\n  nnwnnwnnw: \"B\",\n  wnwnnwnnn: \"C\",\n  nnnnwwnnw: \"D\",\n  wnnnwwnnn: \"E\",\n  nnwnwwnnn: \"F\",\n  nnnnnwwnw: \"G\",\n  wnnnnwwnn: \"H\",\n  nnwnnwwnn: \"I\",\n  nnnnwwwnn: \"J\",\n  wnnnnnnww: \"K\",\n  nnwnnnnww: \"L\",\n  wnwnnnnwn: \"M\",\n  nnnnwnnww: \"N\",\n  wnnnwnnwn: \"O\",\n  nnwnwnnwn: \"P\",\n  nnnnnnwww: \"Q\",\n  wnnnnnwwn: \"R\",\n  nnwnnnwwn: \"S\",\n  nnnnwnwwn: \"T\",\n  wwnnnnnnw: \"U\",\n  nwwnnnnnw: \"V\",\n  wwwnnnnnn: \"W\",\n  nwnnwnnnw: \"X\",\n  wwnnwnnnn: \"Y\",\n  nwwnwnnnn: \"Z\",\n  nwnnnnwnw: \"-\",\n  wwnnnnwnn: \".\",\n  nwwnnnwnn: \" \",\n  nwnwnwnnn: \"$\",\n  nwnwnnnwn: \"/\",\n  nwnnnwnwn: \"+\",\n  nnnwnwnwn: \"%\",\n  nwnnwnwnn: \"*\"\n};\n\nfunction l(n) {\n  const e = [],\n        t = Math.ceil(n.reduce((n, e) => n + e, 0) / n.length);\n\n  for (; n.length > 0;) {\n    const w = n.splice(0, 10).map(n => n > t ? \"w\" : \"n\").slice(0, 9).join(\"\");\n    e.push(a[w]);\n  }\n\n  return \"*\" !== e.pop() || \"*\" !== e.shift() ? \"\" : e.join(\"\");\n}\n\nconst h = [{\n  100010100: \"0\"\n}, {\n  101001e3: \"1\"\n}, {\n  101000100: \"2\"\n}, {\n  101000010: \"3\"\n}, {\n  100101e3: \"4\"\n}, {\n  100100100: \"5\"\n}, {\n  100100010: \"6\"\n}, {\n  10101e4: \"7\"\n}, {\n  100010010: \"8\"\n}, {\n  100001010: \"9\"\n}, {\n  110101e3: \"A\"\n}, {\n  110100100: \"B\"\n}, {\n  110100010: \"C\"\n}, {\n  110010100: \"D\"\n}, {\n  110010010: \"E\"\n}, {\n  110001010: \"F\"\n}, {\n  101101e3: \"G\"\n}, {\n  101100100: \"H\"\n}, {\n  101100010: \"I\"\n}, {\n  100110100: \"J\"\n}, {\n  100011010: \"K\"\n}, {\n  101011e3: \"L\"\n}, {\n  101001100: \"M\"\n}, {\n  101000110: \"N\"\n}, {\n  100101100: \"O\"\n}, {\n  100010110: \"P\"\n}, {\n  110110100: \"Q\"\n}, {\n  110110010: \"R\"\n}, {\n  110101100: \"S\"\n}, {\n  110100110: \"T\"\n}, {\n  110010110: \"U\"\n}, {\n  110011010: \"V\"\n}, {\n  101101100: \"W\"\n}, {\n  101100110: \"X\"\n}, {\n  100110110: \"Y\"\n}, {\n  100111010: \"Z\"\n}, {\n  100101110: \"-\"\n}, {\n  111010100: \".\"\n}, {\n  111010010: \" \"\n}, {\n  111001010: \"$\"\n}, {\n  101101110: \"/\"\n}, {\n  101110110: \"+\"\n}, {\n  110101110: \"%\"\n}, {\n  100100110: \"($)\"\n}, {\n  111011010: \"(%)\"\n}, {\n  111010110: \"(/)\"\n}, {\n  100110010: \"(+)\"\n}, {\n  101011110: \"*\"\n}];\n\nfunction f(n) {\n  const e = [],\n        t = [];\n  n.pop();\n  const w = Math.ceil(n.reduce((n, e) => n + e, 0) / n.length),\n        o = Math.ceil(n.reduce((n, e) => e < w ? (n + e) / 2 : n, 0));\n\n  for (let e = 0; e < n.length; e += 1) {\n    let w = n[e];\n\n    for (; w > 0;) e % 2 == 0 ? t.push(1) : t.push(0), w -= o;\n  }\n\n  for (let n = 0; n < t.length; n += 9) {\n    const w = t.slice(n, n + 9).join(\"\"),\n          o = h.filter(n => Object.keys(n)[0] === w);\n    e.push(o[0][w]);\n  }\n\n  if (\"*\" !== e.shift() || \"*\" !== e.pop()) return \"\";\n  const r = e.pop();\n  let c,\n      i,\n      s = 0;\n\n  const a = n => Object.values(n)[0] === c;\n\n  for (let n = e.length - 1; n >= 0; n -= 1) c = e[n], i = h.indexOf(h.filter(a)[0]), s += i * (1 + (e.length - (n + 1)) % 20);\n\n  if (Object.values(h[s % 47])[0] !== r) return \"\";\n  const l = e.pop();\n  s = 0;\n\n  for (let n = e.length - 1; n >= 0; n -= 1) c = e[n], i = h.indexOf(h.filter(a)[0]), s += i * (1 + (e.length - (n + 1)) % 20);\n\n  return Object.values(h[s % 47])[0] !== l ? \"\" : e.join(\"\");\n}\n\nconst d = [\"nnwwn\", \"wnnnw\", \"nwnnw\", \"wwnnn\", \"nnwnw\", \"wnwnn\", \"nwwnn\", \"nnnww\", \"wnnwn\", \"nwnwn\"];\n\nfunction p(n, e) {\n  const t = [],\n        w = Math.ceil(n.reduce((n, e) => (n + e) / 2, 0));\n\n  if (\"interleaved\" === e) {\n    const e = n.splice(0, 4).map(n => n > w ? \"w\" : \"n\").join(\"\"),\n          o = n.splice(n.length - 3, 3).map(n => n > w ? \"w\" : \"n\").join(\"\");\n    if (\"nnnn\" !== e || \"wnn\" !== o) return \"\";\n\n    for (; n.length > 0;) {\n      const e = n.splice(0, 10),\n            o = e.filter((n, e) => e % 2 == 0).map(n => n > w ? \"w\" : \"n\").join(\"\");\n      t.push(d.indexOf(o));\n      const r = e.filter((n, e) => e % 2 != 0).map(n => n > w ? \"w\" : \"n\").join(\"\");\n      t.push(d.indexOf(r));\n    }\n  } else {\n    const e = n.splice(0, 6).filter((n, e) => e % 2 == 0).map(n => n > w ? \"w\" : \"n\").join(\"\"),\n          o = n.splice(n.length - 5, 5).filter((n, e) => e % 2 == 0).map(n => n > w ? \"w\" : \"n\").join(\"\");\n    if (\"wwn\" !== e || \"wnw\" !== o) return \"\";\n\n    for (; n.length > 0;) {\n      const e = n.splice(0, 10).filter((n, e) => e % 2 == 0).map(n => n > w ? \"w\" : \"n\").join(\"\");\n      t.push(d.indexOf(e));\n    }\n  }\n\n  return t.join(\"\");\n}\n\nconst u = {\n  3211: \"0\",\n  2221: \"1\",\n  2122: \"2\",\n  1411: \"3\",\n  1132: \"4\",\n  1231: \"5\",\n  1114: \"6\",\n  1312: \"7\",\n  1213: \"8\",\n  3112: \"9\"\n};\n\nfunction C(n) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"13\";\n  let t = \"\";\n  const w = (n[0] + n[1] + n[2]) / 3;\n  n.shift(), n.shift(), n.shift(), n.pop(), n.pop(), n.pop(), \"13\" === e ? n.splice(24, 5) : n.splice(16, 5);\n\n  for (let e = 0; e < n.length; e += 4) {\n    const o = n.slice(e, e + 4),\n          r = [o[0] / w, o[1] / w, o[2] / w, o[3] / w].map(n => 1.5 === n ? 1 : Math.round(n)),\n          c = u[r.join(\"\")] || u[r.reverse().join(\"\")];\n    t += c || \"?\";\n  }\n\n  return t;\n}\n\nvar g;\n\nfunction m(n, e) {\n  if (\"\" === n || \"\" === e) return e;\n  const t = n.split(\"\");\n  return e.split(\"\").forEach((n, e) => {\n    t[e] && \"?\" !== t[e] || n && \"?\" !== n && (t[e] = n);\n  }), t.join(\"\");\n}\n\nfunction v(n) {\n  const e = document.createElement(\"canvas\"),\n        t = e.getContext(\"2d\");\n  if (!t) throw new Error(\"Cannot create canvas 2d context\");\n  const w = n.naturalWidth,\n        o = n.naturalHeight;\n  return e.width = w, e.height = o, t.drawImage(n, 0, 0), t.getImageData(0, 0, w, o);\n}\n\n!function (n) {\n  n[\"code-128\"] = \"code-128\", n[\"code-2of5\"] = \"code-2of5\", n[\"code-39\"] = \"code-39\", n[\"code-93\"] = \"code-93\", n[\"ean-13\"] = \"ean-13\", n[\"ean-8\"] = \"ean-8\", n.codabar = \"codabar\";\n}(g || (g = {}));\nconst E = \"object\" == typeof process && process.release && \"node\" === process.release.name;\n\nfunction b(n, e, t) {\n  const w = [],\n        o = n.length / (e * t);\n  let r = 0,\n      c = 0;\n\n  for (let i = 0; i < e; i += 1) {\n    let s = 0,\n        a = 0;\n\n    for (let w = 0; w < t; w += 1) {\n      const t = (w * e + i) * o;\n      s += Math.sqrt((Math.pow(n[t], 2) + Math.pow(n[t + 1], 2) + Math.pow(n[t + 2], 2)) / 3);\n    }\n\n    a = s / t >= 127 ? 255 : 0, 255 === a && 0 === r || (a === c ? r += 1 : (w.push(r), c = a, r = 1), i === e - 1 && 0 === a && w.push(r));\n  }\n\n  return w;\n}\n\nlet j;\n\ntry {\n  process && \"test\" === process.env.NODE_ENV && (j = !0);\n} catch (n) {\n  j = !1;\n}\n\nfunction M(_ref) {\n  let {\n    image: t,\n    barcode: o,\n    barcodeType: r,\n    options: c\n  } = _ref;\n  return e(this, void 0, void 0, function* () {\n    let i;\n\n    switch (o) {\n      case g.codabar:\n        i = w;\n        break;\n\n      case g[\"code-128\"]:\n        i = s;\n        break;\n\n      case g[\"code-39\"]:\n        i = l;\n        break;\n\n      case g[\"code-93\"]:\n        i = f;\n        break;\n\n      case g[\"code-2of5\"]:\n        i = p;\n        break;\n\n      case g[\"ean-13\"]:\n        i = C, r = \"13\";\n        break;\n\n      case g[\"ean-8\"]:\n        i = C, r = \"8\";\n        break;\n\n      default:\n        throw new Error(`Invalid barcode specified. Available decoders: ${g}.`);\n    }\n\n    const a = j || c && c.singlePass || !1,\n          {\n      data: h,\n      width: d,\n      height: u\n    } = (M = t).data && M.width && M.height ? t : yield function (t) {\n      return e(this, void 0, void 0, function* () {\n        return new Promise((e, w) => {\n          if (\"string\" == typeof t) {\n            if (t.startsWith(\"#\")) {\n              const n = document.getElementById(t.substr(1));\n\n              if (n instanceof HTMLImageElement && e(v(n)), n instanceof HTMLCanvasElement) {\n                const t = n.getContext(\"2d\");\n                if (!t) throw new Error(\"Cannot create canvas 2d context\");\n                e(t.getImageData(0, 0, n.width, n.height));\n              }\n\n              w(new Error(\"Invalid image source specified!\"));\n            } else if (!(o = t).startsWith(\"#\") && /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/.test(o)) {\n              const n = new Image();\n              n.onerror = w, n.onload = () => e(v(n)), n.src = t;\n            } else E && n.read(t, (n, t) => {\n              if (n) w(n);else {\n                const {\n                  data: n,\n                  width: w,\n                  height: o\n                } = t.bitmap;\n                e({\n                  data: Uint8ClampedArray.from(n),\n                  width: w,\n                  height: o\n                });\n              }\n            });\n          } else if (t instanceof HTMLImageElement) e(v(t));else if (t instanceof HTMLCanvasElement) {\n            const n = t.getContext(\"2d\");\n            if (!n) throw new Error(\"Cannot create canvas 2d context\");\n            e(n.getImageData(0, 0, t.width, t.height));\n          }\n          var o;\n        });\n      });\n    }(t);\n    var M;\n    const S = h.length / (d * u);\n    let N = \"\";\n    c && c.useAdaptiveThreshold && function (n, e, t) {\n      const w = new Array(e * t).fill(0),\n            o = n.length / (e * t),\n            r = Math.floor(t),\n            c = Math.floor(r / 2);\n\n      for (let r = 0; r < e; r += 1) {\n        let c = 0;\n\n        for (let i = 0; i < t; i += 1) {\n          const t = i * e + r,\n                s = t * o,\n                a = (n[s] + n[s + 1] + n[s + 2]) / 3;\n          n[s] = a, n[s + 1] = a, n[s + 2] = a, c += a, w[t] = 0 === r ? c : w[t - 1] + c;\n        }\n      }\n\n      for (let r = 0; r < e; r += 1) for (let i = 0; i < t; i += 1) {\n        const s = (i * e + r) * o;\n        let a = r - c,\n            l = r + c,\n            h = i - c,\n            f = i + c;\n        a < 0 && (a = 0), l >= e && (l = e - 1), h < 0 && (h = 0), f >= t && (f = t - 1);\n        const d = (l - a) * (f - h),\n              p = w[f * e + l] - w[h * e + l] - w[f * e + a] + w[h * e + a];\n        let u = 255;\n        n[s] * d < .85 * p && (u = 0), n[s] = u, n[s + 1] = u, n[s + 2] = u;\n      }\n    }(h, d, u);\n    const A = [5, 6, 4, 7, 3, 8, 2, 9, 1],\n          F = Math.round(u / A.length),\n          O = Math.min(2, u);\n\n    for (let n = 0; n < A.length; n += 1) {\n      const e = S * d * Math.floor(F * A[n]),\n            t = e + O * S * d,\n            w = b(h.slice(e, t), d, O);\n\n      if (0 === w.length) {\n        if (a || n === A.length - 1) throw new Error(\"Failed to detect lines in the image!\");\n        continue;\n      }\n\n      const o = i(w, r);\n\n      if (o) {\n        if (a || !o.includes(\"?\")) return o;\n        if (N = m(N, o), !N.includes(\"?\")) return N;\n      }\n    }\n\n    return N;\n  });\n}\n\nexport default M;","map":{"version":3,"mappings":"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","names":["CHAR_SET","nnnnnww","nnnnwwn","nnnwnnw","wwnnnnn","nnwnnwn","wnnnnwn","nwnnnnw","nwnnwnn","nwwnnnn","wnnwnnn","nnnwwnn","nnwwnnn","wnnnwnw","wnwnnnw","wnwnwnn","nnwwwww","nnwwnwn","nnnwnww","nwnwnnw","nnnwwwn","decoder","lines","code","barThreshold","Math","ceil","reduce","pre","item","length","a","splice","map","line","join","push","WIDTH_TBL","TBL_A","TBL_B","TBL_C","letterKey","letterCodePrev","lookupTBL","computedLines","count","factor","i","round","pop","slice","letterCode","indexOf","charCodeAt","nnnwwnwnn","wnnwnnnnw","nnwwnnnnw","wnwwnnnnn","nnnwwnnnw","wnnwwnnnn","nnwwwnnnn","nnnwnnwnw","wnnwnnwnn","nnwwnnwnn","wnnnnwnnw","nnwnnwnnw","wnwnnwnnn","nnnnwwnnw","wnnnwwnnn","nnwnwwnnn","nnnnnwwnw","wnnnnwwnn","nnwnnwwnn","nnnnwwwnn","wnnnnnnww","nnwnnnnww","wnwnnnnwn","nnnnwnnww","wnnnwnnwn","nnwnwnnwn","nnnnnnwww","wnnnnnwwn","nnwnnnwwn","nnnnwnwwn","wwnnnnnnw","nwwnnnnnw","wwwnnnnnn","nwnnwnnnw","wwnnwnnnn","nwwnwnnnn","nwnnnnwnw","wwnnnnwnn","nwwnnnwnn","nwnwnwnnn","nwnwnnnwn","nwnnnwnwn","nnnwnwnwn","nwnnwnwnn","sequenceBar","shift","binary","minBarWidth","segment","searcKey","char","filter","Object","keys","K","letter","Value","sum","findValue","values","C","type","startChar","endChar","seg","index","b","UPC_SET","bar","group","digits","digit","result","reverse","BARCODE_DECODERS","combineAllPossible","finalResult","finalResultArr","split","forEach","createImageData","image","canvas","document","createElement","ctx","getContext","Error","width","naturalWidth","height","naturalHeight","drawImage","getImageData","isNode","process","release","name","getLines","data","channels","columnAverageLast","column","columnSum","columnAverage","row","sqrt","isTestEnv","env","NODE_ENV","javascriptBarcodeReader","options","barcode","barcodeType","codabar","codabar.decoder","code128.decoder","code39.decoder","code93.decoder","code2of5.decoder","ean.decoder","useSinglePass","singlePass","object","source","Promise","resolve","reject","startsWith","imageElement","getElementById","substr","HTMLImageElement","HTMLCanvasElement","s","test","img","Image","onerror","onload","src","Jimp","read","err","bitmap","Uint8ClampedArray","from","getImageDataFromSource","useAdaptiveThreshold","integralImage","Array","fill","floor","s2","j","pureIndex","v","x1","x2","y1","y2","applyAdaptiveThreshold","searchPoints","searchLineStep","rowsToScan","min","start","end","includes"],"sources":["C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\codabar\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\code-128\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\code-39\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\code-93\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\code2of5\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\ean\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\BARCODE_DECODERS.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\combineAllPossible.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\createImageData.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\getImageDataFromSource.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\getLines.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\index.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\isUrl.ts","C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\javascript-barcode-reader\\src\\utilities\\adaptiveThreshold.ts"],"sourcesContent":["const CHAR_SET: {\n  [key: string]: string\n} = {\n  nnnnnww: '0',\n  nnnnwwn: '1',\n  nnnwnnw: '2',\n  wwnnnnn: '3',\n  nnwnnwn: '4',\n  wnnnnwn: '5',\n  nwnnnnw: '6',\n  nwnnwnn: '7',\n  nwwnnnn: '8',\n  wnnwnnn: '9',\n  nnnwwnn: '-',\n  nnwwnnn: '$',\n  wnnnwnw: ':',\n  wnwnnnw: '/',\n  wnwnwnn: '.',\n  nnwwwww: '+',\n  nnwwnwn: 'A',\n  nnnwnww: 'B',\n  nwnwnnw: 'C',\n  nnnwwwn: 'D',\n}\n\nexport function decoder(lines: number[]): string {\n  const code = []\n\n  const barThreshold = Math.ceil(lines.reduce((pre, item) => (pre + item) / 2, 0))\n\n  // Read one encoded character at a time.\n  while (lines.length > 0) {\n    const seg = lines.splice(0, 8).splice(0, 7)\n    const a = seg.map(line => (line < barThreshold ? 'n' : 'w')).join('')\n\n    code.push(CHAR_SET[a])\n  }\n\n  return code.join('')\n}\n","const WIDTH_TBL = [\n  '212222',\n  '222122',\n  '222221',\n  '121223',\n  '121322',\n  '131222',\n  '122213',\n  '122312',\n  '132212',\n  '221213',\n  '221312',\n  '231212',\n  '112232',\n  '122132',\n  '122231',\n  '113222',\n  '123122',\n  '123221',\n  '223211',\n  '221132',\n  '221231',\n  '213212',\n  '223112',\n  '312131',\n  '311222',\n  '321122',\n  '321221',\n  '312212',\n  '322112',\n  '322211',\n  '212123',\n  '212321',\n  '232121',\n  '111323',\n  '131123',\n  '131321',\n  '112313',\n  '132113',\n  '132311',\n  '211313',\n  '231113',\n  '231311',\n  '112133',\n  '112331',\n  '132131',\n  '113123',\n  '113321',\n  '133121',\n  '313121',\n  '211331',\n  '231131',\n  '213113',\n  '213311',\n  '213131',\n  '311123',\n  '311321',\n  '331121',\n  '312113',\n  '312311',\n  '332111',\n  '314111',\n  '221411',\n  '431111',\n  '111224',\n  '111422',\n  '121124',\n  '121421',\n  '141122',\n  '141221',\n  '112214',\n  '112412',\n  '122114',\n  '122411',\n  '142112',\n  '142211',\n  '241211',\n  '221114',\n  '413111',\n  '241112',\n  '134111',\n  '111242',\n  '121142',\n  '121241',\n  '114212',\n  '124112',\n  '124211',\n  '411212',\n  '421112',\n  '421211',\n  '212141',\n  '214121',\n  '412121',\n  '111143',\n  '111341',\n  '131141',\n  '114113',\n  '114311',\n  '411113',\n  '411311',\n  '113141',\n  '114131',\n  '311141',\n  '411131',\n  '211412',\n  '211214',\n  '211232',\n  '233111',\n  '211133',\n  '2331112',\n]\n\nconst TBL_A = [\n  ' ',\n  '!',\n  '\"',\n  '#',\n  '$',\n  '%',\n  '&',\n  \"'\",\n  '(',\n  ')',\n  '*',\n  '+',\n  ',',\n  '-',\n  '.',\n  '/',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  ':',\n  ';',\n  '<',\n  '=',\n  '>',\n  '?',\n  '@',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  '[',\n  '\\\\',\n  ']',\n  '^',\n  '_',\n  'NUL',\n  'SOH',\n  'STX',\n  'ETX',\n  'EOT',\n  'ENQ',\n  'ACK',\n  'BEL',\n  'BS',\n  'HT',\n  'LF',\n  'VT',\n  'FF',\n  'CR',\n  'SO',\n  'SI',\n  'DLE',\n  'DC1',\n  'DC2',\n  'DC3',\n  'DC4',\n  'NAK',\n  'SYN',\n  'ETB',\n  'CAN',\n  'EM',\n  'SUB',\n  'ESC',\n  'FS',\n  'GS',\n  'RS',\n  'US',\n  'FNC 3',\n  'FNC 2',\n  'Shift B',\n  'Code C',\n  'Code B',\n  'FNC 4',\n  'FNC 1',\n  'Code A',\n  'Code B',\n  'Code C',\n  'Stop',\n  'Reverse Stop',\n]\n\nconst TBL_B = [\n  ' ',\n  '!',\n  '\"',\n  '#',\n  '$',\n  '%',\n  '&',\n  \"'\",\n  '(',\n  ')',\n  '*',\n  '+',\n  ',',\n  '-',\n  '.',\n  '/',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  ':',\n  ';',\n  '<',\n  '=',\n  '>',\n  '?',\n  '@',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  '[',\n  '\\\\',\n  ']',\n  '^',\n  '_',\n  '`',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '{',\n  '|',\n  '}',\n  '~',\n  'DEL',\n  'FNC 3',\n  'FNC 2',\n  'Shift A',\n  'Code C',\n  'FNC 4',\n  'Code A',\n  'FNC 1',\n  'Code A',\n  'Code B',\n  'Code C',\n  'Stop',\n  'Reverse Stop',\n]\n\nconst TBL_C = [\n  '00',\n  '01',\n  '02',\n  '03',\n  '04',\n  '05',\n  '06',\n  '07',\n  '08',\n  '09',\n  '10',\n  '11',\n  '12',\n  '13',\n  '14',\n  '15',\n  '16',\n  '17',\n  '18',\n  '19',\n  '20',\n  '21',\n  '22',\n  '23',\n  '24',\n  '25',\n  '26',\n  '27',\n  '28',\n  '29',\n  '30',\n  '31',\n  '32',\n  '33',\n  '34',\n  '35',\n  '36',\n  '37',\n  '38',\n  '39',\n  '40',\n  '41',\n  '42',\n  '43',\n  '44',\n  '45',\n  '46',\n  '47',\n  '48',\n  '49',\n  '50',\n  '51',\n  '52',\n  '53',\n  '54',\n  '55',\n  '56',\n  '57',\n  '58',\n  '59',\n  '60',\n  '61',\n  '62',\n  '63',\n  '64',\n  '65',\n  '66',\n  '67',\n  '68',\n  '69',\n  '70',\n  '71',\n  '72',\n  '73',\n  '74',\n  '75',\n  '76',\n  '77',\n  '78',\n  '79',\n  '80',\n  '81',\n  '82',\n  '83',\n  '84',\n  '85',\n  '86',\n  '87',\n  '88',\n  '89',\n  '90',\n  '91',\n  '92',\n  '93',\n  '94',\n  '95',\n  '96',\n  '97',\n  '98',\n  '99',\n  'Code B',\n  'Code A',\n  'FNC 1',\n  'Code A',\n  'Code B',\n  'Code C',\n  'Stop',\n  'Reverse Stop',\n]\n\nconst computeGroup = (lines: number[]): number[] => {\n  const count = lines.length - 13\n  const factor =\n    lines.reduce((pre, item, i) => {\n      if (i >= count) return pre\n\n      return pre + item\n    }, 0) /\n    (Math.ceil(count / 6) * 11)\n\n  return lines.map(item => Math.round(item / factor) || 1)\n}\n\nexport function decoder(lines: number[]): string {\n  const code = []\n  let lookupTBL = TBL_B\n  // let sumOP = 0\n  let letterKey\n  let letterCodePrev\n\n  const computedLines = computeGroup(lines)\n\n  if (!computedLines) return ''\n\n  // extract terminal bar\n  computedLines.pop()\n\n  // skip check code and stop code using -13\n  for (let i = 0; i * 6 < computedLines.length - 13; i += 1) {\n    letterKey = computedLines.slice(i * 6, (i + 1) * 6).join('')\n    const keyIndex = WIDTH_TBL.indexOf(letterKey)\n    const letterCode = lookupTBL[keyIndex]\n    // sumOP += i * keyIndex\n\n    switch (letterCode) {\n      case 'Code A':\n        lookupTBL = TBL_A\n        break\n      case 'Code B':\n        lookupTBL = TBL_B\n        break\n      case 'Code C':\n        lookupTBL = TBL_C\n        break\n      case 'FNC 4':\n        break\n      default:\n        if (letterCode) {\n          if (letterCodePrev === 'FNC 4') {\n            code.push(letterCode.charCodeAt(0) + 128)\n          } else {\n            code.push(letterCode)\n          }\n\n          letterCodePrev = letterCode\n        } else {\n          code.push('?')\n        }\n        break\n    }\n  }\n\n  // letterKey = computedLines.slice(0, 6).join('')\n  // if (sumOP % 103 !== WIDTH_TBL.indexOf(letterKey)) return ''\n\n  return code.join('')\n}\n","const CHAR_SET: {\n  [key: string]: string\n} = {\n  nnnwwnwnn: '0',\n  wnnwnnnnw: '1',\n  nnwwnnnnw: '2',\n  wnwwnnnnn: '3',\n  nnnwwnnnw: '4',\n  wnnwwnnnn: '5',\n  nnwwwnnnn: '6',\n  nnnwnnwnw: '7',\n  wnnwnnwnn: '8',\n  nnwwnnwnn: '9',\n  wnnnnwnnw: 'A',\n  nnwnnwnnw: 'B',\n  wnwnnwnnn: 'C',\n  nnnnwwnnw: 'D',\n  wnnnwwnnn: 'E',\n  nnwnwwnnn: 'F',\n  nnnnnwwnw: 'G',\n  wnnnnwwnn: 'H',\n  nnwnnwwnn: 'I',\n  nnnnwwwnn: 'J',\n  wnnnnnnww: 'K',\n  nnwnnnnww: 'L',\n  wnwnnnnwn: 'M',\n  nnnnwnnww: 'N',\n  wnnnwnnwn: 'O',\n  nnwnwnnwn: 'P',\n  nnnnnnwww: 'Q',\n  wnnnnnwwn: 'R',\n  nnwnnnwwn: 'S',\n  nnnnwnwwn: 'T',\n  wwnnnnnnw: 'U',\n  nwwnnnnnw: 'V',\n  wwwnnnnnn: 'W',\n  nwnnwnnnw: 'X',\n  wwnnwnnnn: 'Y',\n  nwwnwnnnn: 'Z',\n  nwnnnnwnw: '-',\n  wwnnnnwnn: '.',\n  nwwnnnwnn: ' ',\n  nwnwnwnnn: '$',\n  nwnwnnnwn: '/',\n  nwnnnwnwn: '+',\n  nnnwnwnwn: '%',\n  nwnnwnwnn: '*',\n}\n\nexport function decoder(lines: number[]): string {\n  const code = []\n\n  const barThreshold = Math.ceil(lines.reduce((pre, item) => pre + item, 0) / lines.length)\n\n  // Read one encoded character at a time.\n  while (lines.length > 0) {\n    const sequenceBar = lines\n      .splice(0, 10)\n      .map(line => (line > barThreshold ? 'w' : 'n'))\n      .slice(0, 9)\n      .join('')\n\n    code.push(CHAR_SET[sequenceBar])\n  }\n\n  if (code.pop() !== '*' || code.shift() !== '*') return ''\n\n  return code.join('')\n}\n","interface CharValue {\n  [key: string]: string\n}\n\nconst CHAR_SET: CharValue[] = [\n  { '100010100': '0' },\n  { '101001000': '1' },\n  { '101000100': '2' },\n  { '101000010': '3' },\n  { '100101000': '4' },\n  { '100100100': '5' },\n  { '100100010': '6' },\n  { '101010000': '7' },\n  { '100010010': '8' },\n  { '100001010': '9' },\n  { '110101000': 'A' },\n  { '110100100': 'B' },\n  { '110100010': 'C' },\n  { '110010100': 'D' },\n  { '110010010': 'E' },\n  { '110001010': 'F' },\n  { '101101000': 'G' },\n  { '101100100': 'H' },\n  { '101100010': 'I' },\n  { '100110100': 'J' },\n  { '100011010': 'K' },\n  { '101011000': 'L' },\n  { '101001100': 'M' },\n  { '101000110': 'N' },\n  { '100101100': 'O' },\n  { '100010110': 'P' },\n  { '110110100': 'Q' },\n  { '110110010': 'R' },\n  { '110101100': 'S' },\n  { '110100110': 'T' },\n  { '110010110': 'U' },\n  { '110011010': 'V' },\n  { '101101100': 'W' },\n  { '101100110': 'X' },\n  { '100110110': 'Y' },\n  { '100111010': 'Z' },\n  { '100101110': '-' },\n  { '111010100': '.' },\n  { '111010010': ' ' },\n  { '111001010': '$' },\n  { '101101110': '/' },\n  { '101110110': '+' },\n  { '110101110': '%' },\n  { '100100110': '($)' },\n  { '111011010': '(%)' },\n  { '111010110': '(/)' },\n  { '100110010': '(+)' },\n  { '101011110': '*' },\n]\n\nexport function decoder(lines: number[]): string {\n  const code = []\n  const binary = []\n\n  // remove termination bar\n  lines.pop()\n\n  const barThreshold = Math.ceil(lines.reduce((pre, item) => pre + item, 0) / lines.length)\n\n  const minBarWidth = Math.ceil(\n    lines.reduce((pre, item) => {\n      if (item < barThreshold) return (pre + item) / 2\n      return pre\n    }, 0)\n  )\n\n  // leave the padded *\n  for (let i = 0; i < lines.length; i += 1) {\n    let segment = lines[i]\n\n    while (segment > 0) {\n      if (i % 2 === 0) {\n        binary.push(1)\n      } else {\n        binary.push(0)\n      }\n      segment -= minBarWidth\n    }\n  }\n\n  for (let i = 0; i < binary.length; i += 9) {\n    const searcKey = binary.slice(i, i + 9).join('')\n    const char = CHAR_SET.filter(item => Object.keys(item)[0] === searcKey)\n    code.push(char[0][searcKey])\n  }\n\n  if (code.shift() !== '*' || code.pop() !== '*') return ''\n\n  const K = code.pop()\n  let sum = 0\n  let letter: string\n  let Value\n  const findValue = (item: CharValue): boolean => Object.values(item)[0] === letter\n\n  for (let i = code.length - 1; i >= 0; i -= 1) {\n    letter = code[i]\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\n  }\n\n  if (Object.values(CHAR_SET[sum % 47])[0] !== K) return ''\n\n  const C = code.pop()\n  sum = 0\n\n  for (let i = code.length - 1; i >= 0; i -= 1) {\n    letter = code[i]\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\n  }\n\n  if (Object.values(CHAR_SET[sum % 47])[0] !== C) return ''\n\n  return code.join('')\n}\n","const CHAR_SET = [\n  'nnwwn',\n  'wnnnw',\n  'nwnnw',\n  'wwnnn',\n  'nnwnw',\n  'wnwnn',\n  'nwwnn',\n  'nnnww',\n  'wnnwn',\n  'nwnwn',\n]\n\nexport function decoder(lines: number[], type?: string): string {\n  const code = []\n\n  const barThreshold = Math.ceil(lines.reduce((pre, item) => (pre + item) / 2, 0))\n\n  if (type === 'interleaved') {\n    // extract start/ends pair\n    const startChar = lines\n      .splice(0, 4)\n      .map((line: number) => (line > barThreshold ? 'w' : 'n'))\n      .join('')\n\n    const endChar = lines\n      .splice(lines.length - 3, 3)\n      .map((line: number) => (line > barThreshold ? 'w' : 'n'))\n      .join('')\n\n    if (startChar !== 'nnnn' || endChar !== 'wnn') return ''\n\n    // Read one encoded character at a time.\n    while (lines.length > 0) {\n      const seg = lines.splice(0, 10)\n\n      const a = seg\n        .filter((item, index) => index % 2 === 0)\n        .map(line => (line > barThreshold ? 'w' : 'n'))\n        .join('')\n\n      code.push(CHAR_SET.indexOf(a))\n\n      const b = seg\n        .filter((item, index) => index % 2 !== 0)\n        .map(line => (line > barThreshold ? 'w' : 'n'))\n        .join('')\n\n      code.push(CHAR_SET.indexOf(b))\n    }\n  } else {\n    // extract start/ends pair\n    const startChar = lines\n      .splice(0, 6)\n      .filter((item: any, index: number) => index % 2 === 0)\n      .map((line: number) => (line > barThreshold ? 'w' : 'n'))\n      .join('')\n\n    const endChar = lines\n      .splice(lines.length - 5, 5)\n      .filter((item: any, index: number) => index % 2 === 0)\n      .map((line: number) => (line > barThreshold ? 'w' : 'n'))\n      .join('')\n\n    if (startChar !== 'wwn' || endChar !== 'wnw') return ''\n\n    // Read one encoded character at a time.\n    while (lines.length > 0) {\n      const a = lines\n        .splice(0, 10)\n        .filter((item, index) => index % 2 === 0)\n        .map(line => (line > barThreshold ? 'w' : 'n'))\n        .join('')\n\n      code.push(CHAR_SET.indexOf(a))\n    }\n  }\n\n  return code.join('')\n}\n","const UPC_SET: {\n  [key: string]: string\n} = {\n  '3211': '0',\n  '2221': '1',\n  '2122': '2',\n  '1411': '3',\n  '1132': '4',\n  '1231': '5',\n  '1114': '6',\n  '1312': '7',\n  '1213': '8',\n  '3112': '9',\n}\n\nexport function decoder(lines: number[], type = '13'): string {\n  let code = ''\n\n  // start indicator/reference lines\n  const bar = (lines[0] + lines[1] + lines[2]) / 3\n\n  // remove start pattern\n  lines.shift()\n  lines.shift()\n  lines.shift()\n\n  // remove end pattern\n  lines.pop()\n  lines.pop()\n  lines.pop()\n\n  // remove middle check pattern\n\n  // remove middle check pattern\n  if (type === '13') {\n    lines.splice(24, 5)\n  } else {\n    lines.splice(16, 5)\n  }\n\n  for (let i = 0; i < lines.length; i += 4) {\n    const group = lines.slice(i, i + 4)\n\n    const digits = [group[0] / bar, group[1] / bar, group[2] / bar, group[3] / bar].map(digit =>\n      digit === 1.5 ? 1 : Math.round(digit)\n    )\n\n    const result = UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\n\n    if (result) {\n      code += result\n    } else {\n      code += '?'\n    }\n  }\n\n  return code\n}\n","export enum BARCODE_DECODERS {\n  'code-128' = 'code-128',\n  'code-2of5' = 'code-2of5',\n  'code-39' = 'code-39',\n  'code-93' = 'code-93',\n  'ean-13' = 'ean-13',\n  'ean-8' = 'ean-8',\n  'codabar' = 'codabar',\n}\n","export function combineAllPossible(finalResult: string, result: string): string {\n  if (finalResult === '' || result === '') {\n    return result\n  }\n\n  const finalResultArr = finalResult.split('')\n  const resultArr = result.split('')\n\n  resultArr.forEach((char, index) => {\n    if (!finalResultArr[index] || finalResultArr[index] === '?') {\n      if (char && char !== '?') {\n        finalResultArr[index] = char\n      }\n    }\n  })\n\n  return finalResultArr.join('')\n}\n","import { ImageDataLike } from './ImageDataLike'\n\nexport function createImageData(image: HTMLImageElement): ImageDataLike {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) throw new Error('Cannot create canvas 2d context')\n\n  const width = image.naturalWidth\n  const height = image.naturalHeight\n\n  canvas.width = width\n  canvas.height = height\n  ctx.drawImage(image, 0, 0)\n\n  return ctx.getImageData(0, 0, width, height)\n}\n","import * as Jimp from 'jimp'\nimport { createImageData } from './createImageData'\nimport { ImageDataLike } from './ImageDataLike'\nimport { isUrl } from './isUrl'\n\nconst isNode = typeof process === 'object' && process.release && process.release.name === 'node'\n\nexport async function getImageDataFromSource(\n  source: string | HTMLImageElement | HTMLCanvasElement\n): Promise<ImageDataLike> {\n  return new Promise((resolve, reject) => {\n    if (typeof source === 'string') {\n      if (source.startsWith('#')) {\n        const imageElement = document.getElementById(source.substr(1))\n\n        if (imageElement instanceof HTMLImageElement) {\n          resolve(createImageData(imageElement))\n        }\n\n        if (imageElement instanceof HTMLCanvasElement) {\n          const ctx = imageElement.getContext('2d')\n          if (!ctx) throw new Error('Cannot create canvas 2d context')\n          resolve(ctx.getImageData(0, 0, imageElement.width, imageElement.height))\n        }\n\n        reject(new Error('Invalid image source specified!'))\n      } else if (isUrl(source)) {\n        const img = new Image()\n        img.onerror = reject\n        img.onload = (): void => resolve(createImageData(img))\n        img.src = source\n      } else if (isNode) {\n        Jimp.read(source, (err, image) => {\n          if (err) {\n            reject(err)\n          } else {\n            const { data, width, height } = image.bitmap\n\n            resolve({\n              data: Uint8ClampedArray.from(data),\n              width,\n              height,\n            })\n          }\n        })\n      }\n    } else if (source instanceof HTMLImageElement) {\n      resolve(createImageData(source))\n    } else if (source instanceof HTMLCanvasElement) {\n      const ctx = source.getContext('2d')\n      if (!ctx) throw new Error('Cannot create canvas 2d context')\n      resolve(ctx.getImageData(0, 0, source.width, source.height))\n    }\n  })\n}\n","export function getLines(data: Uint8ClampedArray, width: number, height: number): number[] {\n  const lines: number[] = []\n  const channels = data.length / (width * height)\n  let count = 0\n  let columnAverageLast = 0\n\n  for (let column = 0; column < width; column += 1) {\n    let columnSum = 0\n    let columnAverage = 0\n\n    for (let row = 0; row < height; row += 1) {\n      const index = (row * width + column) * channels\n      columnSum += Math.sqrt((data[index] ** 2 + data[index + 1] ** 2 + data[index + 2] ** 2) / 3)\n    }\n\n    // pixels are same in column\n    columnAverage = columnSum / height >= 127 ? 255 : 0\n\n    // skip white padding in the start & end\n    if (columnAverage === 255 && count === 0) continue\n\n    // count line width\n    if (columnAverage === columnAverageLast) {\n      count += 1\n    } else {\n      lines.push(count)\n      columnAverageLast = columnAverage\n      count = 1\n    }\n\n    // skip padding in the last\n    if (column === width - 1 && columnAverage === 0) {\n      lines.push(count)\n    }\n  }\n\n  return lines\n}\n","// available decoders\nimport * as codabar from './codabar'\nimport * as code128 from './code-128'\nimport * as code39 from './code-39'\nimport * as code93 from './code-93'\nimport * as code2of5 from './code2of5'\nimport * as ean from './ean'\nimport { applyAdaptiveThreshold } from './utilities/adaptiveThreshold'\nimport { BARCODE_DECODERS } from './utilities/BARCODE_DECODERS'\nimport { combineAllPossible } from './utilities/combineAllPossible'\nimport { getImageDataFromSource } from './utilities/getImageDataFromSource'\nimport { getLines } from './utilities/getLines'\nimport { ImageDataLike } from './utilities/ImageDataLike'\n\n// detect test env\nlet isTestEnv: boolean\ntry {\n  if (process && process.env.NODE_ENV === 'test') {\n    isTestEnv = true\n  }\n} catch {\n  isTestEnv = false\n}\n\nfunction isImageLike(object: any): object is ImageDataLike {\n  return object.data && object.width && object.height\n}\n\ntype JavascriptBarcodeReader = {\n  image: string | HTMLImageElement | HTMLCanvasElement | ImageDataLike\n  barcode: string | BARCODE_DECODERS\n  barcodeType?: string\n  options?: {\n    useAdaptiveThreshold?: boolean\n    singlePass?: boolean\n  }\n}\n\ninterface DecoderFunction {\n  (lines: number[], type?: string): string\n}\n\nexport default async function javascriptBarcodeReader({\n  image,\n  barcode,\n  barcodeType,\n  options,\n}: JavascriptBarcodeReader): Promise<string> {\n  let decoder: DecoderFunction\n\n  switch (barcode) {\n    case BARCODE_DECODERS.codabar:\n      decoder = codabar.decoder\n      break\n    case BARCODE_DECODERS['code-128']:\n      decoder = code128.decoder\n      break\n    case BARCODE_DECODERS['code-39']:\n      decoder = code39.decoder\n      break\n    case BARCODE_DECODERS['code-93']:\n      decoder = code93.decoder\n      break\n    case BARCODE_DECODERS['code-2of5']:\n      decoder = code2of5.decoder\n      break\n    case BARCODE_DECODERS['ean-13']:\n      decoder = ean.decoder\n      barcodeType = '13'\n      break\n    case BARCODE_DECODERS['ean-8']:\n      decoder = ean.decoder\n      barcodeType = '8'\n      break\n    default:\n      throw new Error(`Invalid barcode specified. Available decoders: ${BARCODE_DECODERS}.`)\n  }\n\n  const useSinglePass = isTestEnv || (options && options.singlePass) || false\n  const { data, width, height } = isImageLike(image) ? image : await getImageDataFromSource(image)\n  const channels = data.length / (width * height)\n  let finalResult = ''\n\n  // apply adaptive threshold\n  if (options && options.useAdaptiveThreshold) {\n    applyAdaptiveThreshold(data, width, height)\n  }\n\n  // check points for barcode location\n  const searchPoints = [5, 6, 4, 7, 3, 8, 2, 9, 1]\n  const searchLineStep = Math.round(height / searchPoints.length)\n  const rowsToScan = Math.min(2, height)\n\n  for (let i = 0; i < searchPoints.length; i += 1) {\n    const start = channels * width * Math.floor(searchLineStep * searchPoints[i])\n    const end = start + rowsToScan * channels * width\n    const lines = getLines(data.slice(start, end), width, rowsToScan)\n\n    if (lines.length === 0) {\n      if (useSinglePass || i === searchPoints.length - 1) {\n        throw new Error('Failed to detect lines in the image!')\n      }\n\n      continue\n    }\n\n    // Run the decoder\n    const result = decoder(lines, barcodeType)\n\n    if (!result) continue\n    else if (useSinglePass || !result.includes('?')) return result\n\n    finalResult = combineAllPossible(finalResult, result)\n    if (!finalResult.includes('?')) return finalResult\n  }\n\n  return finalResult\n}\n","export function isUrl(s: string): boolean {\n  const regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/\n\n  if (s.startsWith('#')) return false\n\n  return regexp.test(s)\n}\n","export function applyAdaptiveThreshold(\n  data: Uint8ClampedArray,\n  width: number,\n  height: number\n): Uint8ClampedArray {\n  const integralImage = new Array(width * height).fill(0)\n  const channels = data.length / (width * height)\n  const t = 0.15 // threshold percentage\n  const s = Math.floor(height) // bracket size\n  const s2 = Math.floor(s / 2)\n\n  for (let i = 0; i < width; i += 1) {\n    let sum = 0\n    for (let j = 0; j < height; j += 1) {\n      const pureIndex = j * width + i\n      const index = pureIndex * channels\n      // greyscale\n      const v = (data[index] + data[index + 1] + data[index + 2]) / 3\n\n      data[index] = v\n      data[index + 1] = v\n      data[index + 2] = v\n      sum += v\n\n      if (i === 0) {\n        integralImage[pureIndex] = sum\n      } else {\n        integralImage[pureIndex] = integralImage[pureIndex - 1] + sum\n      }\n    }\n  }\n\n  // skip edge rows\n  for (let i = 0; i < width; i += 1) {\n    for (let j = 0; j < height; j += 1) {\n      const pureIndex = j * width + i\n      const index = pureIndex * channels\n      // no. of pixels per window\n      let x1 = i - s2\n      let x2 = i + s2\n      let y1 = j - s2\n      let y2 = j + s2\n\n      if (x1 < 0) x1 = 0\n      if (x2 >= width) x2 = width - 1\n      if (y1 < 0) y1 = 0\n      if (y2 >= height) y2 = height - 1\n\n      const count = (x2 - x1) * (y2 - y1)\n      const sum =\n        integralImage[y2 * width + x2] -\n        integralImage[y1 * width + x2] -\n        integralImage[y2 * width + x1] +\n        integralImage[y1 * width + x1]\n      let v = 255\n\n      if (data[index] * count < sum * (1 - t)) {\n        v = 0\n      }\n\n      data[index] = v\n      data[index + 1] = v\n      data[index + 2] = v\n    }\n  }\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}