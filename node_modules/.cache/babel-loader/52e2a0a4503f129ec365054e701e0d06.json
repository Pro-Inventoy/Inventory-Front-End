{"ast":null,"code":"function BufferStream(buffer, offset, length, bigEndian) {\n  this.buffer = buffer;\n  this.offset = offset || 0;\n  length = typeof length === 'number' ? length : buffer.length;\n  this.endPosition = this.offset + length;\n  this.setBigEndian(bigEndian);\n}\n\nBufferStream.prototype = {\n  setBigEndian: function (bigEndian) {\n    this.bigEndian = !!bigEndian;\n  },\n  nextUInt8: function () {\n    var value = this.buffer.readUInt8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextInt8: function () {\n    var value = this.buffer.readInt8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextUInt16: function () {\n    var value = this.bigEndian ? this.buffer.readUInt16BE(this.offset) : this.buffer.readUInt16LE(this.offset);\n    this.offset += 2;\n    return value;\n  },\n  nextUInt32: function () {\n    var value = this.bigEndian ? this.buffer.readUInt32BE(this.offset) : this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return value;\n  },\n  nextInt16: function () {\n    var value = this.bigEndian ? this.buffer.readInt16BE(this.offset) : this.buffer.readInt16LE(this.offset);\n    this.offset += 2;\n    return value;\n  },\n  nextInt32: function () {\n    var value = this.bigEndian ? this.buffer.readInt32BE(this.offset) : this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return value;\n  },\n  nextFloat: function () {\n    var value = this.bigEndian ? this.buffer.readFloatBE(this.offset) : this.buffer.readFloatLE(this.offset);\n    this.offset += 4;\n    return value;\n  },\n  nextDouble: function () {\n    var value = this.bigEndian ? this.buffer.readDoubleBE(this.offset) : this.buffer.readDoubleLE(this.offset);\n    this.offset += 8;\n    return value;\n  },\n  nextBuffer: function (length) {\n    var value = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return value;\n  },\n  remainingLength: function () {\n    return this.endPosition - this.offset;\n  },\n  nextString: function (length) {\n    var value = this.buffer.toString('utf8', this.offset, this.offset + length);\n    this.offset += length;\n    return value;\n  },\n  mark: function () {\n    var self = this;\n    return {\n      openWithOffset: function (offset) {\n        offset = (offset || 0) + this.offset;\n        return new BufferStream(self.buffer, offset, self.endPosition - offset, self.bigEndian);\n      },\n      offset: this.offset\n    };\n  },\n  offsetFrom: function (marker) {\n    return this.offset - marker.offset;\n  },\n  skip: function (amount) {\n    this.offset += amount;\n  },\n  branch: function (offset, length) {\n    length = typeof length === 'number' ? length : this.endPosition - (this.offset + offset);\n    return new BufferStream(this.buffer, this.offset + offset, length, this.bigEndian);\n  }\n};\nmodule.exports = BufferStream;","map":{"version":3,"names":["BufferStream","buffer","offset","length","bigEndian","endPosition","setBigEndian","prototype","nextUInt8","value","readUInt8","nextInt8","readInt8","nextUInt16","readUInt16BE","readUInt16LE","nextUInt32","readUInt32BE","readUInt32LE","nextInt16","readInt16BE","readInt16LE","nextInt32","readInt32BE","readInt32LE","nextFloat","readFloatBE","readFloatLE","nextDouble","readDoubleBE","readDoubleLE","nextBuffer","slice","remainingLength","nextString","toString","mark","self","openWithOffset","offsetFrom","marker","skip","amount","branch","module","exports"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/node_modules/exif-parser/lib/bufferstream.js"],"sourcesContent":["function BufferStream(buffer, offset, length, bigEndian) {\n\tthis.buffer = buffer;\n\tthis.offset = offset || 0;\n\tlength = typeof length === 'number' ? length : buffer.length;\n\tthis.endPosition = this.offset + length;\n\tthis.setBigEndian(bigEndian);\n}\n\nBufferStream.prototype = {\n\tsetBigEndian: function(bigEndian) {\n\t\tthis.bigEndian = !!bigEndian;\n\t},\n\tnextUInt8: function() {\n\t\tvar value = this.buffer.readUInt8(this.offset);\n\t\tthis.offset += 1;\n\t\treturn value;\n\t},\n\tnextInt8: function() {\n\t\tvar value = this.buffer.readInt8(this.offset);\n\t\tthis.offset += 1;\n\t\treturn value;\n\t},\n\tnextUInt16: function() {\n\t\tvar value = this.bigEndian ? this.buffer.readUInt16BE(this.offset) : this.buffer.readUInt16LE(this.offset);\n\t\tthis.offset += 2;\n\t\treturn value;\n\t},\n\tnextUInt32: function() {\n\t\tvar value = this.bigEndian ? this.buffer.readUInt32BE(this.offset) : this.buffer.readUInt32LE(this.offset);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t},\n\tnextInt16: function() {\n\t\tvar value = this.bigEndian ? this.buffer.readInt16BE(this.offset) : this.buffer.readInt16LE(this.offset);\n\t\tthis.offset += 2;\n\t\treturn value;\n\t},\n\tnextInt32: function() {\n\t\tvar value = this.bigEndian ? this.buffer.readInt32BE(this.offset) : this.buffer.readInt32LE(this.offset);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t},\n\tnextFloat: function() {\n\t\tvar value = this.bigEndian ? this.buffer.readFloatBE(this.offset) : this.buffer.readFloatLE(this.offset);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t},\n\tnextDouble: function() {\n\t\tvar value = this.bigEndian ? this.buffer.readDoubleBE(this.offset) : this.buffer.readDoubleLE(this.offset);\n\t\tthis.offset += 8;\n\t\treturn value;\n\t},\n\tnextBuffer: function(length) {\n\t\tvar value = this.buffer.slice(this.offset, this.offset + length);\n\t\tthis.offset += length;\n\t\treturn value;\n\t},\n\tremainingLength: function() {\n\t\treturn this.endPosition - this.offset;\n\t},\n\tnextString: function(length) {\n\t\tvar value = this.buffer.toString('utf8', this.offset, this.offset + length);\n\t\tthis.offset += length;\n\t\treturn value;\n\t},\n\tmark: function() {\n\t\tvar self = this;\n\t\treturn {\n\t\t\topenWithOffset: function(offset) {\n\t\t\t\toffset = (offset || 0) + this.offset;\n\t\t\t\treturn new BufferStream(self.buffer, offset, self.endPosition - offset, self.bigEndian);\n\t\t\t},\n\t\t\toffset: this.offset\n\t\t};\n\t},\n\toffsetFrom: function(marker) {\n\t\treturn this.offset - marker.offset;\n\t},\n\tskip: function(amount) {\n\t\tthis.offset += amount;\n\t},\n\tbranch: function(offset, length) {\n\t\tlength = typeof length === 'number' ? length : this.endPosition - (this.offset + offset);\n\t\treturn new BufferStream(this.buffer, this.offset + offset, length, this.bigEndian);\n\t}\n};\n\nmodule.exports = BufferStream;\n"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CC,SAA9C,EAAyD;EACxD,KAAKH,MAAL,GAAcA,MAAd;EACA,KAAKC,MAAL,GAAcA,MAAM,IAAI,CAAxB;EACAC,MAAM,GAAG,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCF,MAAM,CAACE,MAAtD;EACA,KAAKE,WAAL,GAAmB,KAAKH,MAAL,GAAcC,MAAjC;EACA,KAAKG,YAAL,CAAkBF,SAAlB;AACA;;AAEDJ,YAAY,CAACO,SAAb,GAAyB;EACxBD,YAAY,EAAE,UAASF,SAAT,EAAoB;IACjC,KAAKA,SAAL,GAAiB,CAAC,CAACA,SAAnB;EACA,CAHuB;EAIxBI,SAAS,EAAE,YAAW;IACrB,IAAIC,KAAK,GAAG,KAAKR,MAAL,CAAYS,SAAZ,CAAsB,KAAKR,MAA3B,CAAZ;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CARuB;EASxBE,QAAQ,EAAE,YAAW;IACpB,IAAIF,KAAK,GAAG,KAAKR,MAAL,CAAYW,QAAZ,CAAqB,KAAKV,MAA1B,CAAZ;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CAbuB;EAcxBI,UAAU,EAAE,YAAW;IACtB,IAAIJ,KAAK,GAAG,KAAKL,SAAL,GAAiB,KAAKH,MAAL,CAAYa,YAAZ,CAAyB,KAAKZ,MAA9B,CAAjB,GAAyD,KAAKD,MAAL,CAAYc,YAAZ,CAAyB,KAAKb,MAA9B,CAArE;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CAlBuB;EAmBxBO,UAAU,EAAE,YAAW;IACtB,IAAIP,KAAK,GAAG,KAAKL,SAAL,GAAiB,KAAKH,MAAL,CAAYgB,YAAZ,CAAyB,KAAKf,MAA9B,CAAjB,GAAyD,KAAKD,MAAL,CAAYiB,YAAZ,CAAyB,KAAKhB,MAA9B,CAArE;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CAvBuB;EAwBxBU,SAAS,EAAE,YAAW;IACrB,IAAIV,KAAK,GAAG,KAAKL,SAAL,GAAiB,KAAKH,MAAL,CAAYmB,WAAZ,CAAwB,KAAKlB,MAA7B,CAAjB,GAAwD,KAAKD,MAAL,CAAYoB,WAAZ,CAAwB,KAAKnB,MAA7B,CAApE;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CA5BuB;EA6BxBa,SAAS,EAAE,YAAW;IACrB,IAAIb,KAAK,GAAG,KAAKL,SAAL,GAAiB,KAAKH,MAAL,CAAYsB,WAAZ,CAAwB,KAAKrB,MAA7B,CAAjB,GAAwD,KAAKD,MAAL,CAAYuB,WAAZ,CAAwB,KAAKtB,MAA7B,CAApE;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CAjCuB;EAkCxBgB,SAAS,EAAE,YAAW;IACrB,IAAIhB,KAAK,GAAG,KAAKL,SAAL,GAAiB,KAAKH,MAAL,CAAYyB,WAAZ,CAAwB,KAAKxB,MAA7B,CAAjB,GAAwD,KAAKD,MAAL,CAAY0B,WAAZ,CAAwB,KAAKzB,MAA7B,CAApE;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CAtCuB;EAuCxBmB,UAAU,EAAE,YAAW;IACtB,IAAInB,KAAK,GAAG,KAAKL,SAAL,GAAiB,KAAKH,MAAL,CAAY4B,YAAZ,CAAyB,KAAK3B,MAA9B,CAAjB,GAAyD,KAAKD,MAAL,CAAY6B,YAAZ,CAAyB,KAAK5B,MAA9B,CAArE;IACA,KAAKA,MAAL,IAAe,CAAf;IACA,OAAOO,KAAP;EACA,CA3CuB;EA4CxBsB,UAAU,EAAE,UAAS5B,MAAT,EAAiB;IAC5B,IAAIM,KAAK,GAAG,KAAKR,MAAL,CAAY+B,KAAZ,CAAkB,KAAK9B,MAAvB,EAA+B,KAAKA,MAAL,GAAcC,MAA7C,CAAZ;IACA,KAAKD,MAAL,IAAeC,MAAf;IACA,OAAOM,KAAP;EACA,CAhDuB;EAiDxBwB,eAAe,EAAE,YAAW;IAC3B,OAAO,KAAK5B,WAAL,GAAmB,KAAKH,MAA/B;EACA,CAnDuB;EAoDxBgC,UAAU,EAAE,UAAS/B,MAAT,EAAiB;IAC5B,IAAIM,KAAK,GAAG,KAAKR,MAAL,CAAYkC,QAAZ,CAAqB,MAArB,EAA6B,KAAKjC,MAAlC,EAA0C,KAAKA,MAAL,GAAcC,MAAxD,CAAZ;IACA,KAAKD,MAAL,IAAeC,MAAf;IACA,OAAOM,KAAP;EACA,CAxDuB;EAyDxB2B,IAAI,EAAE,YAAW;IAChB,IAAIC,IAAI,GAAG,IAAX;IACA,OAAO;MACNC,cAAc,EAAE,UAASpC,MAAT,EAAiB;QAChCA,MAAM,GAAG,CAACA,MAAM,IAAI,CAAX,IAAgB,KAAKA,MAA9B;QACA,OAAO,IAAIF,YAAJ,CAAiBqC,IAAI,CAACpC,MAAtB,EAA8BC,MAA9B,EAAsCmC,IAAI,CAAChC,WAAL,GAAmBH,MAAzD,EAAiEmC,IAAI,CAACjC,SAAtE,CAAP;MACA,CAJK;MAKNF,MAAM,EAAE,KAAKA;IALP,CAAP;EAOA,CAlEuB;EAmExBqC,UAAU,EAAE,UAASC,MAAT,EAAiB;IAC5B,OAAO,KAAKtC,MAAL,GAAcsC,MAAM,CAACtC,MAA5B;EACA,CArEuB;EAsExBuC,IAAI,EAAE,UAASC,MAAT,EAAiB;IACtB,KAAKxC,MAAL,IAAewC,MAAf;EACA,CAxEuB;EAyExBC,MAAM,EAAE,UAASzC,MAAT,EAAiBC,MAAjB,EAAyB;IAChCA,MAAM,GAAG,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,KAAKE,WAAL,IAAoB,KAAKH,MAAL,GAAcA,MAAlC,CAA/C;IACA,OAAO,IAAIF,YAAJ,CAAiB,KAAKC,MAAtB,EAA8B,KAAKC,MAAL,GAAcA,MAA5C,EAAoDC,MAApD,EAA4D,KAAKC,SAAjE,CAAP;EACA;AA5EuB,CAAzB;AA+EAwC,MAAM,CAACC,OAAP,GAAiB7C,YAAjB"},"metadata":{},"sourceType":"script"}