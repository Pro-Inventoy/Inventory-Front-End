{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { signIn as signInService, signUp as signUpService, uploadAvatar, upsertProfile } from '../services/user-service.js';\nimport { showError } from '../services/toaster.js';\nimport { UserStateContext, UserActionContext } from '../context/UserContext.jsx';\nexport function useStatus() {\n  _s();\n\n  const {\n    user,\n    profile\n  } = useContext(UserStateContext);\n  return {\n    user,\n    profile\n  };\n}\n\n_s(useStatus, \"1V8hqdvDlFQEfymqml8VHuQse/o=\");\n\nexport function useAuth() {\n  _s2();\n\n  const {\n    setUser\n  } = useContext(UserActionContext);\n\n  const createAction = service => async credentials => {\n    const {\n      user,\n      error\n    } = await service(credentials);\n\n    if (error) {\n      showError(error.message);\n    }\n\n    if (user) {\n      setUser(user);\n    }\n  };\n\n  const signIn = createAction(signInService);\n  const signUp = createAction(signUpService);\n  return {\n    signIn,\n    signUp\n  };\n}\n\n_s2(useAuth, \"g9OG4SUjU5mpHdCvBeAVz19m3RM=\");\n\nexport function useProfile() {\n  _s3();\n\n  const {\n    user,\n    profile\n  } = useContext(UserStateContext);\n  const {\n    setProfile\n  } = useContext(UserActionContext);\n\n  const updateProfile = async _ref => {\n    let {\n      avatar,\n      ...profile\n    } = _ref;\n    const {\n      url,\n      error\n    } = await uploadAvatar(user.id, avatar);\n\n    if (error) {\n      showError(error.message);\n    }\n\n    if (url) {\n      const {\n        data,\n        error\n      } = await upsertProfile({ ...profile,\n        avatar: url\n      });\n\n      if (error) {\n        showError(error.message);\n      }\n\n      if (data) {\n        setProfile(data);\n      }\n    }\n  };\n\n  return [profile, updateProfile];\n}\n\n_s3(useProfile, \"3iPRWz7An7zlfXJsj6osWuwu6zg=\");","map":{"version":3,"names":["useContext","signIn","signInService","signUp","signUpService","uploadAvatar","upsertProfile","showError","UserStateContext","UserActionContext","useStatus","user","profile","useAuth","setUser","createAction","service","credentials","error","message","useProfile","setProfile","updateProfile","avatar","url","id","data"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/src/state/hooks/userAuth.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport {\r\n  signIn as signInService,\r\n  signUp as signUpService,\r\n  uploadAvatar,\r\n  upsertProfile,\r\n} from'../services/user-service.js';\r\nimport { showError } from '../services/toaster.js';\r\n\r\nimport {\r\n  UserStateContext,\r\n  UserActionContext\r\n} from '../context/UserContext.jsx';\r\n\r\nexport function useStatus() {\r\n  const { user, profile } = useContext(UserStateContext);\r\n\r\n  return { user, profile };\r\n}\r\n\r\nexport function useAuth() {\r\n  const { setUser } = useContext(UserActionContext);\r\n\r\n  const createAction = (service) => async (credentials) => {\r\n    const { user, error } = await service(credentials);\r\n\r\n    if (error) {\r\n      showError(error.message);\r\n    }\r\n    if(user) {\r\n      setUser(user);\r\n    }\r\n  };\r\n  const signIn = createAction(signInService);\r\n  const signUp = createAction(signUpService);\r\n\r\n  return {\r\n    signIn,\r\n    signUp\r\n  };\r\n}\r\n\r\nexport function useProfile() {\r\n  const { user, profile } = useContext(UserStateContext);\r\n  const { setProfile } = useContext(UserActionContext);\r\n\r\n  const updateProfile = async ({ avatar, ...profile }) => {\r\n    const { url, error } = await uploadAvatar(user.id, avatar);\r\n    if (error) {\r\n      showError(error.message);\r\n    }\r\n    if(url) {\r\n      const { data, error } = await upsertProfile({\r\n        ...profile,\r\n        avatar: url\r\n      });\r\n\r\n      if(error) {\r\n        showError(error.message);\r\n      }\r\n      if (data) {\r\n        setProfile(data);\r\n      }\r\n    }    \r\n  };\r\n  return [profile, updateProfile];\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACEC,MAAM,IAAIC,aADZ,EAEEC,MAAM,IAAIC,aAFZ,EAGEC,YAHF,EAIEC,aAJF,QAKM,6BALN;AAMA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SACEC,gBADF,EAEEC,iBAFF,QAGO,4BAHP;AAKA,OAAO,SAASC,SAAT,GAAqB;EAAA;;EAC1B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBZ,UAAU,CAACQ,gBAAD,CAApC;EAEA,OAAO;IAAEG,IAAF;IAAQC;EAAR,CAAP;AACD;;GAJeF,S;;AAMhB,OAAO,SAASG,OAAT,GAAmB;EAAA;;EACxB,MAAM;IAAEC;EAAF,IAAcd,UAAU,CAACS,iBAAD,CAA9B;;EAEA,MAAMM,YAAY,GAAIC,OAAD,IAAa,MAAOC,WAAP,IAAuB;IACvD,MAAM;MAAEN,IAAF;MAAQO;IAAR,IAAkB,MAAMF,OAAO,CAACC,WAAD,CAArC;;IAEA,IAAIC,KAAJ,EAAW;MACTX,SAAS,CAACW,KAAK,CAACC,OAAP,CAAT;IACD;;IACD,IAAGR,IAAH,EAAS;MACPG,OAAO,CAACH,IAAD,CAAP;IACD;EACF,CATD;;EAUA,MAAMV,MAAM,GAAGc,YAAY,CAACb,aAAD,CAA3B;EACA,MAAMC,MAAM,GAAGY,YAAY,CAACX,aAAD,CAA3B;EAEA,OAAO;IACLH,MADK;IAELE;EAFK,CAAP;AAID;;IApBeU,O;;AAsBhB,OAAO,SAASO,UAAT,GAAsB;EAAA;;EAC3B,MAAM;IAAET,IAAF;IAAQC;EAAR,IAAoBZ,UAAU,CAACQ,gBAAD,CAApC;EACA,MAAM;IAAEa;EAAF,IAAiBrB,UAAU,CAACS,iBAAD,CAAjC;;EAEA,MAAMa,aAAa,GAAG,cAAkC;IAAA,IAA3B;MAAEC,MAAF;MAAU,GAAGX;IAAb,CAA2B;IACtD,MAAM;MAAEY,GAAF;MAAON;IAAP,IAAiB,MAAMb,YAAY,CAACM,IAAI,CAACc,EAAN,EAAUF,MAAV,CAAzC;;IACA,IAAIL,KAAJ,EAAW;MACTX,SAAS,CAACW,KAAK,CAACC,OAAP,CAAT;IACD;;IACD,IAAGK,GAAH,EAAQ;MACN,MAAM;QAAEE,IAAF;QAAQR;MAAR,IAAkB,MAAMZ,aAAa,CAAC,EAC1C,GAAGM,OADuC;QAE1CW,MAAM,EAAEC;MAFkC,CAAD,CAA3C;;MAKA,IAAGN,KAAH,EAAU;QACRX,SAAS,CAACW,KAAK,CAACC,OAAP,CAAT;MACD;;MACD,IAAIO,IAAJ,EAAU;QACRL,UAAU,CAACK,IAAD,CAAV;MACD;IACF;EACF,CAlBD;;EAmBA,OAAO,CAACd,OAAD,EAAUU,aAAV,CAAP;AACD;;IAxBeF,U"},"metadata":{},"sourceType":"module"}