{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.measureText = measureText;\nexports.measureTextHeight = measureTextHeight;\n\nfunction measureText(font, text) {\n  var x = 0;\n\n  for (var i = 0; i < text.length; i++) {\n    if (font.chars[text[i]]) {\n      var kerning = font.kernings[text[i]] && font.kernings[text[i]][text[i + 1]] ? font.kernings[text[i]][text[i + 1]] : 0;\n      x += (font.chars[text[i]].xadvance || 0) + kerning;\n    }\n  }\n\n  return x;\n}\n\nfunction measureTextHeight(font, text, maxWidth) {\n  var words = text.split(' ');\n  var line = '';\n  var textTotalHeight = font.common.lineHeight;\n\n  for (var n = 0; n < words.length; n++) {\n    var testLine = line + words[n] + ' ';\n    var testWidth = measureText(font, testLine);\n\n    if (testWidth > maxWidth && n > 0) {\n      textTotalHeight += font.common.lineHeight;\n      line = words[n] + ' ';\n    } else {\n      line = testLine;\n    }\n  }\n\n  return textTotalHeight;\n}","map":{"version":3,"mappings":";;;;;;;;AAAO,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;EACtC,IAAIC,CAAC,GAAG,CAAR;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IACpC,IAAIH,IAAI,CAACK,KAALL,CAAWC,IAAI,CAACE,CAAD,CAAfH,CAAJ,EAAyB;MACvB,IAAMM,OAAO,GACXN,IAAI,CAACO,QAALP,CAAcC,IAAI,CAACE,CAAD,CAAlBH,KAA0BA,IAAI,CAACO,QAALP,CAAcC,IAAI,CAACE,CAAD,CAAlBH,EAAuBC,IAAI,CAACE,CAAC,GAAG,CAAL,CAA3BH,CAA1BA,GACIA,IAAI,CAACO,QAALP,CAAcC,IAAI,CAACE,CAAD,CAAlBH,EAAuBC,IAAI,CAACE,CAAC,GAAG,CAAL,CAA3BH,CADJA,GAEI,CAHN;MAKAE,CAAC,IAAI,CAACF,IAAI,CAACK,KAALL,CAAWC,IAAI,CAACE,CAAD,CAAfH,EAAoBQ,QAApBR,IAAgC,CAAjC,IAAsCM,OAA3CJ;IACD;EACF;;EAED,OAAOA,CAAP;AACD;;AAEM,SAASO,iBAAT,CAA2BT,IAA3B,EAAiCC,IAAjC,EAAuCS,QAAvC,EAAiD;EACtD,IAAMC,KAAK,GAAGV,IAAI,CAACW,KAALX,CAAW,GAAXA,CAAd;EACA,IAAIY,IAAI,GAAG,EAAX;EACA,IAAIC,eAAe,GAAGd,IAAI,CAACe,MAALf,CAAYgB,UAAlC;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACP,MAA1B,EAAkCa,CAAC,EAAnC,EAAuC;IACrC,IAAMC,QAAQ,GAAGL,IAAI,GAAGF,KAAK,CAACM,CAAD,CAAZJ,GAAkB,GAAnC;IACA,IAAMM,SAAS,GAAGpB,WAAW,CAACC,IAAD,EAAOkB,QAAP,CAA7B;;IAEA,IAAIC,SAAS,GAAGT,QAAZS,IAAwBF,CAAC,GAAG,CAAhC,EAAmC;MACjCH,eAAe,IAAId,IAAI,CAACe,MAALf,CAAYgB,UAA/BF;MACAD,IAAI,GAAGF,KAAK,CAACM,CAAD,CAALN,GAAW,GAAlBE;IAFF,OAGO;MACLA,IAAI,GAAGK,QAAPL;IACD;EACF;;EAED,OAAOC,eAAP;AACD","names":["measureText","font","text","x","i","length","chars","kerning","kernings","xadvance","measureTextHeight","maxWidth","words","split","line","textTotalHeight","common","lineHeight","n","testLine","testWidth"],"sources":["C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\@jimp\\plugin-print\\src\\measure-text.js"],"sourcesContent":["export function measureText(font, text) {\n  let x = 0;\n\n  for (let i = 0; i < text.length; i++) {\n    if (font.chars[text[i]]) {\n      const kerning =\n        font.kernings[text[i]] && font.kernings[text[i]][text[i + 1]]\n          ? font.kernings[text[i]][text[i + 1]]\n          : 0;\n\n      x += (font.chars[text[i]].xadvance || 0) + kerning;\n    }\n  }\n\n  return x;\n}\n\nexport function measureTextHeight(font, text, maxWidth) {\n  const words = text.split(' ');\n  let line = '';\n  let textTotalHeight = font.common.lineHeight;\n\n  for (let n = 0; n < words.length; n++) {\n    const testLine = line + words[n] + ' ';\n    const testWidth = measureText(font, testLine);\n\n    if (testWidth > maxWidth && n > 0) {\n      textTotalHeight += font.common.lineHeight;\n      line = words[n] + ' ';\n    } else {\n      line = testLine;\n    }\n  }\n\n  return textTotalHeight;\n}\n"]},"metadata":{},"sourceType":"script"}