{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khaym\\\\Desktop\\\\finalproject\\\\Inventory-Front-End\\\\src\\\\components\\\\Scanner\\\\Scanner.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BarcodeScanner } from 'expo-barcode-scanner';\nimport styles from './Scanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scanner() {\n  _s();\n\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n  const [text, setText] = useState('Not yet Scanned'); // This is what asks for permission when you for open up the camera\n\n  const askForCameraPermission = () => {\n    (async () => {\n      const {\n        status\n      } = await BarcodeScanner.requestPermissionAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }; //Calls for the ask permission function on load\n\n\n  useEffect(() => {\n    askForCameraPermission();\n  }, []);\n\n  const handleBarCodeScanned = _ref => {\n    let {\n      type,\n      data\n    } = _ref;\n    setScanned(true);\n    setText(data);\n  }; //if user denies permission this shows a screen that says there is no access \n  //has a button for user to give permission for camera\n\n\n  if (hasPermission === null) {\n    /*#__PURE__*/\n    _jsxDEV(\"view\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        style: {\n          margin: 10\n        },\n        children: \"No access to camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: 'Allow Camera',\n        onPress: () => askForCameraPermission()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"view\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"view\", {\n      style: styles.barcodebox,\n      children: /*#__PURE__*/_jsxDEV(BarcodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n        style: {\n          height: 400,\n          width: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      style: styles.maintext,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), scanned && /*#__PURE__*/_jsxDEV(\"button\", {\n      title: 'Scan again',\n      onPress: () => setScanned(false),\n      color: \"tomato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Scanner, \"55GeJYQhUeq6g/uQ5aecTBN0xuU=\");\n\n_c = Scanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["useState","useEffect","BarcodeScanner","styles","Scanner","hasPermission","setHasPermission","scanned","setScanned","text","setText","askForCameraPermission","status","requestPermissionAsync","handleBarCodeScanned","type","data","container","margin","barcodebox","undefined","height","width","maintext"],"sources":["C:/Users/khaym/Desktop/finalproject/Inventory-Front-End/src/components/Scanner/Scanner.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { BarcodeScanner } from 'expo-barcode-scanner';\r\nimport styles from './Scanner.css'\r\nexport default function Scanner() {\r\n    const [hasPermission, setHasPermission] = useState(null);\r\n    const [scanned, setScanned] = useState(false);\r\n    const [text, setText] = useState('Not yet Scanned');\r\n\r\n\r\n\r\n    // This is what asks for permission when you for open up the camera\r\n    const askForCameraPermission = () => {\r\n        (async () => {\r\n            const { status } = await BarcodeScanner.requestPermissionAsync();\r\n            setHasPermission(status === 'granted');\r\n        })()\r\n    }\r\n    //Calls for the ask permission function on load\r\n    useEffect(() => {\r\n        askForCameraPermission();\r\n    }, []);\r\n\r\n    const handleBarCodeScanned = ({ type, data}) => {\r\n        setScanned(true);\r\n        setText(data);\r\n    };\r\n    //if user denies permission this shows a screen that says there is no access \r\n    //has a button for user to give permission for camera\r\n    if(hasPermission === null) {\r\n        <view style={styles.container}>\r\n            <text style={{ margin: 10}}>No access to camera</text>\r\n            <button title={'Allow Camera'} onPress={() => askForCameraPermission()}/>\r\n        </view>\r\n    }\r\n    \r\n    return(\r\n        <view style={styles.container}>\r\n        <view style={styles.barcodebox}>\r\n            <BarcodeScanner\r\n            onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n            style={{ height: 400, width: 400 }}/>\r\n        </view>\r\n        <text style={styles.maintext}>{text}</text>\r\n        {scanned && <button title={'Scan again'} onPress={() => setScanned(false)} color='tomato'/>}\r\n    </view>\r\n);\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AACA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAC9B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,iBAAD,CAAhC,CAH8B,CAO9B;;EACA,MAAMW,sBAAsB,GAAG,MAAM;IACjC,CAAC,YAAY;MACT,MAAM;QAAEC;MAAF,IAAa,MAAMV,cAAc,CAACW,sBAAf,EAAzB;MACAP,gBAAgB,CAACM,MAAM,KAAK,SAAZ,CAAhB;IACH,CAHD;EAIH,CALD,CAR8B,CAc9B;;;EACAX,SAAS,CAAC,MAAM;IACZU,sBAAsB;EACzB,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMG,oBAAoB,GAAG,QAAmB;IAAA,IAAlB;MAAEC,IAAF;MAAQC;IAAR,CAAkB;IAC5CR,UAAU,CAAC,IAAD,CAAV;IACAE,OAAO,CAACM,IAAD,CAAP;EACH,CAHD,CAnB8B,CAuB9B;EACA;;;EACA,IAAGX,aAAa,KAAK,IAArB,EAA2B;IACvB;IAAA;MAAM,KAAK,EAAEF,MAAM,CAACc,SAApB;MAAA,wBACI;QAAM,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAV,CAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,KAAK,EAAE,cAAf;QAA+B,OAAO,EAAE,MAAMP,sBAAsB;MAApE;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAIH;;EAED,oBACI;IAAM,KAAK,EAAER,MAAM,CAACc,SAApB;IAAA,wBACA;MAAM,KAAK,EAAEd,MAAM,CAACgB,UAApB;MAAA,uBACI,QAAC,cAAD;QACA,gBAAgB,EAAEZ,OAAO,GAAGa,SAAH,GAAeN,oBADxC;QAEA,KAAK,EAAE;UAAEO,MAAM,EAAE,GAAV;UAAeC,KAAK,EAAE;QAAtB;MAFP;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADA,eAMA;MAAM,KAAK,EAAEnB,MAAM,CAACoB,QAApB;MAAA,UAA+Bd;IAA/B;MAAA;MAAA;MAAA;IAAA,QANA,EAOCF,OAAO,iBAAI;MAAQ,KAAK,EAAE,YAAf;MAA6B,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAAtD;MAA+D,KAAK,EAAC;IAArE;MAAA;MAAA;MAAA;IAAA,QAPZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GA3CuBJ,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}