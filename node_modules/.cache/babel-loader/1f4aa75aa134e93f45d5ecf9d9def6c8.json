{"ast":null,"code":"import { DeviceEventEmitter } from 'react-native';\nimport { EventEmitter } from './EventEmitter';\nimport NativeModulesProxy from './NativeModulesProxy';\nimport { requireNativeViewManager } from './NativeViewManagerAdapter';\nimport Platform from './Platform';\nimport SyntheticPlatformEmitter from './SyntheticPlatformEmitter';\nimport { CodedError } from './errors/CodedError';\nimport { UnavailabilityError } from './errors/UnavailabilityError';\nimport './sweet/setUpErrorManager.fx';\nexport { default as deprecate } from './deprecate';\nexport { DeviceEventEmitter, EventEmitter, NativeModulesProxy, Platform, SyntheticPlatformEmitter, requireNativeViewManager, // Errors\nCodedError, UnavailabilityError };\nexport * from './requireNativeModule';\n/**\n * @deprecated renamed to `DeviceEventEmitter`\n */\n\nexport const RCTDeviceEventEmitter = DeviceEventEmitter;\nexport * from './PermissionsInterface';\nexport * from './PermissionsHook';","map":{"version":3,"mappings":"AAAA,SAASA,kBAAT,QAAmC,cAAnC;AAEA,SAASC,YAAT,QAA2C,gBAA3C;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AAEA,OAAO,8BAAP;AAEA,SAASC,OAAO,IAAIC,SAApB,QAAqC,aAArC;AAEA,SACET,kBADF,EAEEC,YAFF,EAGEC,kBAHF,EAKEE,QALF,EAOEC,wBAPF,EAQEF,wBARF,EASE;AACAG,UAVF,EAWEC,mBAXF;AAcA,cAAc,uBAAd;AAEA;;;;AAGA,OAAO,MAAMG,qBAAqB,GAAGV,kBAA9B;AAEP,cAAc,wBAAd;AACA,cAAc,mBAAd","names":["DeviceEventEmitter","EventEmitter","NativeModulesProxy","requireNativeViewManager","Platform","SyntheticPlatformEmitter","CodedError","UnavailabilityError","default","deprecate","RCTDeviceEventEmitter"],"sources":["C:\\Users\\khaym\\Desktop\\finalproject\\Inventory-Front-End\\node_modules\\expo-modules-core\\src\\index.ts"],"sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\nimport { EventEmitter, Subscription } from './EventEmitter';\nimport NativeModulesProxy from './NativeModulesProxy';\nimport { ProxyNativeModule } from './NativeModulesProxy.types';\nimport { requireNativeViewManager } from './NativeViewManagerAdapter';\nimport Platform from './Platform';\nimport SyntheticPlatformEmitter from './SyntheticPlatformEmitter';\nimport { CodedError } from './errors/CodedError';\nimport { UnavailabilityError } from './errors/UnavailabilityError';\n\nimport './sweet/setUpErrorManager.fx';\n\nexport { default as deprecate } from './deprecate';\n\nexport {\n  DeviceEventEmitter,\n  EventEmitter,\n  NativeModulesProxy,\n  ProxyNativeModule,\n  Platform,\n  Subscription,\n  SyntheticPlatformEmitter,\n  requireNativeViewManager,\n  // Errors\n  CodedError,\n  UnavailabilityError,\n};\n\nexport * from './requireNativeModule';\n\n/**\n * @deprecated renamed to `DeviceEventEmitter`\n */\nexport const RCTDeviceEventEmitter = DeviceEventEmitter;\n\nexport * from './PermissionsInterface';\nexport * from './PermissionsHook';\n"]},"metadata":{},"sourceType":"module"}